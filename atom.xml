<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LiXueLong&#39;Blog</title>
  <icon>https://www.gravatar.com/avatar/0db6835349fd0c0e7db02820c45e30c1</icon>
  <subtitle>别让等待成为遗憾！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-19T11:23:34.728Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>LiXueLong</name>
    <email>li_xuelong@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Handler的正确使用姿势</title>
    <link href="http://yoursite.com/2018/03/08/android-handler/"/>
    <id>http://yoursite.com/2018/03/08/android-handler/</id>
    <published>2018-03-08T11:15:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>先放张图：   </p><p><img src="/assets/images/posts/android/handler_leakmemory.png" alt="handler_leakmemory.png">   </p><p><img src="/assets/images/posts/android/handler_error.png" alt="handler_error.png">    </p><p>是不是很眼熟？  </p><p>这是我们在错误使用Handler时Android Studio的提示信息，告诫我们这样使用会造成内存泄漏。</p><p>那么正确的使用Handler应该是怎样的呢？下面我就一一道来。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li><p>为什么会引起内存泄漏？   </p><p>  我们都知道，非static的内部类会持有外部类的引用，举个类子来说，我们经常在一些内部类中显示跳转activity的时候，给Intent赋值的时候，第一个参数会写 外部类名.this ，这就是持有外部类的引用的很好表现。 同样，其他地方需要用到这个内部类的时候，也不能是直接new出来，因为为非static的，必须先通过new出外部类才能。</p></li></ul><p>那么，现在的情况就是，这个非static的handler内部类，无论是否是匿名的，便会持有外部的activity的引用。</p><p>若此时你的handler的消息队列中有未处理的Message，在Activity finish之后，Message仍然存在，那么Handler也仍然存在。由于Handler中有Context的引用，那么Context也就存在也就存在。而该Context就是我们的Activity，也就是Activity依然纯在，那么我们便是发生了内存泄露。</p><a id="more"></a><ul><li><p>为什么会引起内存泄漏？</p><p>  隐性匿名类Handler变成static的内部类，由于static的内部类，使用的使用不需要外部类的实例，所以static的内部类和外部类是没有联系的，从而不持有外部类的引用，通过这种方法，我们可以避免该种情况的发生。</p><p>  将隐性匿名类写成一个单独的类（top-level-class），这样Handler和Context之间就没有联系了。</p></li><li><p>正确的使用方式如何写？</p><p>  大家都知道，写成静态类后，由于其类似于单独成为了一个类，便不能直接调用我们Activity中的一些控件了，难不成要把所有的控件都写成static的么，当然不是</p></li></ul><p><em>我们通过使Handler持有Activity的一个弱引用来解决这个问题，直接持有Activity的话，我们便与之前的匿名内部类直接持有外部类的引用没区别了，而持有了弱引用，在Activity有用的情况下，其会被AMS持有强引用，GC不会回收，而当其finish了，便没有强引用对象持有了，此时GC时便会回收该Activity，我们的Handler由于是持有的弱引用，也不会导致其回收不成功。</em></p><h3 id="Demo时刻"><a href="#Demo时刻" class="headerlink" title="Demo时刻"></a>Demo时刻</h3><p>来看一个简单的demo，实现在5秒后修改布局中的文字。</p><pre><code class="java"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HandlerActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>{    TextView mTvMsg;    Handler mHandler;    <span class="meta">@Override</span>    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>{        <span class="keyword">super</span>.onCreate(savedInstanceState);        setContentView(R.layout.activity_handler);        mTvMsg = findViewById(R.id.tv_handler);        mHandler = <span class="keyword">new</span> MyHandler(<span class="keyword">this</span>);        mHandler.sendEmptyMessageDelayed(<span class="number">0</span>, <span class="number">4000</span>);    }    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTextView</span><span class="params">(String msg)</span> </span>{        <span class="keyword">if</span> (mTvMsg != <span class="keyword">null</span>) {            mTvMsg.setText(msg);        }    }    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyHandler</span> <span class="keyword">extends</span> <span class="title">Handler</span> </span>{        WeakReference&lt;HandlerActivity&gt; mActivityWeakReference;        <span class="function"><span class="keyword">public</span> <span class="title">MyHandler</span><span class="params">(HandlerActivity activity)</span> </span>{            mActivityWeakReference = <span class="keyword">new</span> WeakReference&lt;HandlerActivity&gt;(activity);        }        <span class="meta">@Override</span>        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>{            <span class="keyword">super</span>.handleMessage(msg);            HandlerActivity handlerActivity = mActivityWeakReference.get();            <span class="keyword">if</span> (handlerActivity != <span class="keyword">null</span>) {                handlerActivity.setTextView(<span class="string">"修改数据了"</span>);            }        }    }}  </code></pre><p>运行后会发现修改成功了！</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>讲解可能不是很清楚，还存在着诸多漏洞，请多包涵。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。</p><p><a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>    </p><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2018/03/08/android-handler/" target="_blank" rel="noopener">Handler的正确使用姿势</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;先放张图：   &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/posts/android/handler_leakmemory.png&quot; alt=&quot;handler_leakmemory.png&quot;&gt;   &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/posts/android/handler_error.png&quot; alt=&quot;handler_error.png&quot;&gt;    &lt;/p&gt;
&lt;p&gt;是不是很眼熟？  &lt;/p&gt;
&lt;p&gt;这是我们在错误使用Handler时Android Studio的提示信息，告诫我们这样使用会造成内存泄漏。&lt;/p&gt;
&lt;p&gt;那么正确的使用Handler应该是怎样的呢？下面我就一一道来。&lt;/p&gt;
&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;为什么会引起内存泄漏？   &lt;/p&gt;
&lt;p&gt;  我们都知道，非static的内部类会持有外部类的引用，举个类子来说，我们经常在一些内部类中显示跳转activity的时候，给Intent赋值的时候，第一个参数会写 外部类名.this ，这就是持有外部类的引用的很好表现。 同样，其他地方需要用到这个内部类的时候，也不能是直接new出来，因为为非static的，必须先通过new出外部类才能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么，现在的情况就是，这个非static的handler内部类，无论是否是匿名的，便会持有外部的activity的引用。&lt;/p&gt;
&lt;p&gt;若此时你的handler的消息队列中有未处理的Message，在Activity finish之后，Message仍然存在，那么Handler也仍然存在。由于Handler中有Context的引用，那么Context也就存在也就存在。而该Context就是我们的Activity，也就是Activity依然纯在，那么我们便是发生了内存泄露。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Handler" scheme="http://yoursite.com/tags/Handler/"/>
    
      <category term="多线程" scheme="http://yoursite.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="内存泄漏" scheme="http://yoursite.com/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Java前置++和后置++的区别</title>
    <link href="http://yoursite.com/2017/12/10/java-preplusplus-postplusplus/"/>
    <id>http://yoursite.com/2017/12/10/java-preplusplus-postplusplus/</id>
    <published>2017-12-09T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="走好每一步就是进步"><a href="#走好每一步就是进步" class="headerlink" title="走好每一步就是进步"></a>走好每一步就是进步</h3><p><img src="/assets/images/posts/common/ronnaldong_BMohRuoAxAJ.jpg" width="400" height="458"></p><p><em>By ronnaldong From Instagram</em></p><p>代码中一会儿i++一会儿++i写着写着就容易搞混淆，特地来记录一下，给自己加深加深印象。<br>i++：就是先使用i的值，然后再给 i+1<br>++i：就是先让 i+1 ，然后再使用<br>​<br>直接上代码吧！    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"i++"</span>);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">3</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * count=3+4+5</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span> count = (i++) + (i++) + (i++);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * i=6</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(i);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * count=12</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(count);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"++i"</span>);</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">3</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * count=4+5+6</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        count = (++j) + (++j) + (++j);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * j=6</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(j);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * count=15</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是对<code>Java前置++和后置++的区别</code>的分析。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。   </p><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/12/10/java-preplusplus-postplusplus/" target="_blank" rel="noopener">Can’t merge new index 65553 into a non-jumbo instruction</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;走好每一步就是进步&quot;&gt;&lt;a href=&quot;#走好每一步就是进步&quot; class=&quot;headerlink&quot; title=&quot;走好每一步就是进步&quot;&gt;&lt;/a&gt;走好每一步就是进步&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/assets/images/posts/common/ronn
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="知识点" scheme="http://yoursite.com/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Can&#39;t merge new index 65553 into a non-jumbo instruction</title>
    <link href="http://yoursite.com/2017/12/01/android-cannot-merge-new-index-65553/"/>
    <id>http://yoursite.com/2017/12/01/android-cannot-merge-new-index-65553/</id>
    <published>2017-11-30T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="又遇到BUG了-づ╥﹏╥-づ"><a href="#又遇到BUG了-づ╥﹏╥-づ" class="headerlink" title="又遇到BUG了(づ╥﹏╥)づ"></a>又遇到BUG了(づ╥﹏╥)づ</h3><p><img src="/assets/images/posts/common/ronnaldong_BNmTUYpDCv2.jpg" width="400" height="458"></p><p><em>By ronnaldong From Instagram</em></p><p>最近一段时间在忙着开发一款自己的APP，将自己常用的功能需求都加入进入，同时在GitHub上跟着大牛们学习新的技术，提升自己的技能，在开发的过程中不断的发现问题和解决问题。<br>在用Android Stuidio打包的时候报了一个错误：<code>Cannot merge new index 65553 into a non-jumbo instruction</code>，百思不得其解，最后发现是因为项目中的类的方法个数超过了65553，WTF!<br>​<br><a id="more"></a></p><h3 id="错误原因分析"><a href="#错误原因分析" class="headerlink" title="错误原因分析"></a>错误原因分析</h3><blockquote><p>最新的ADT和SDK Tool在将jar转化成dex的时候，可能会合并类的代码，这将导致巨大的类；类中的每一个方法都分配有一个id，字节码中以id标识和调用方法；早期的Dalvik VM内部使用short类型变量来标识方法的id，最大值限制在65535；<br>所以在编译代码时就会遇到<code>Cannot merge new index 65553 into a non-jumbo instruction</code>的错误</p></blockquote><p>解决方式：    </p><ul><li>Android Studio    </li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">android&#123;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">dexOptions&#123;</span><br><span class="line">jumboMode <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Eclipse    </li></ul><p>在project.properties文件中添加dex.force.jumbo=true。</p><p>出现这种问题还有一个解决方法就是删掉没有实际使用的代码，或者使用ProGuard处理代码（可以减小代码体积）</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是对<code>Cannot merge new index 65553 into a non-jumbo instruction</code>问题的分析，及解决方式。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://blog.csdn.net/goldenfish1919/article/details/33729679" target="_blank">Android-Cannot merge new index 66195 into a non-jumbo instruction的解决办法</a>   </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/12/01/android-cannot-merge-new-index-65553/" target="_blank" rel="noopener">Can’t merge new index 65553 into a non-jumbo instruction</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;又遇到BUG了-づ╥﹏╥-づ&quot;&gt;&lt;a href=&quot;#又遇到BUG了-づ╥﹏╥-づ&quot; class=&quot;headerlink&quot; title=&quot;又遇到BUG了(づ╥﹏╥)づ&quot;&gt;&lt;/a&gt;又遇到BUG了(づ╥﹏╥)づ&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/assets/images/posts/common/ronnaldong_BNmTUYpDCv2.jpg&quot; width=&quot;400&quot; height=&quot;458&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By ronnaldong From Instagram&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;最近一段时间在忙着开发一款自己的APP，将自己常用的功能需求都加入进入，同时在GitHub上跟着大牛们学习新的技术，提升自己的技能，在开发的过程中不断的发现问题和解决问题。&lt;br&gt;在用Android Stuidio打包的时候报了一个错误：&lt;code&gt;Cannot merge new index 65553 into a non-jumbo instruction&lt;/code&gt;，百思不得其解，最后发现是因为项目中的类的方法个数超过了65553，WTF!&lt;br&gt;​&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Error" scheme="http://yoursite.com/tags/Error/"/>
    
  </entry>
  
  <entry>
    <title>好用的开源项目--RevealTextView</title>
    <link href="http://yoursite.com/2017/11/22/android-github-revealtextview/"/>
    <id>http://yoursite.com/2017/11/22/android-github-revealtextview/</id>
    <published>2017-11-22T11:30:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这段时间有点小偷懒^_^，好久没有更新文章了，想想都有点罪恶感ヽ(●-`Д´-)ノ。为了弥补我的罪恶感，我准备给自己的博客新加一个系列————好用的开源项目（PS：名字有点low，大家多多包含）， 这个系列将为大家带来 <a href="https://github.com" target="_blank" rel="noopener">GitHub</a> 上面一些好用、有趣开源项目的使用，及个人的一点小见解（我会尽量月月更的。。。）。让我们一起学习吧！一起进步吧！</p><p>作为本系列的第一个开源项目，今天的主角是————<a href="https://github.com/ANPez/RevealTextView" target="_blank" rel="noopener">RevealTextView</a><br>项目地址： <a href="https://github.com/ANPez/RevealTextView" target="_blank" rel="noopener">https://github.com/ANPez/RevealTextView</a></p><p><a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>   </p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p>A TextView subclass to show a reveal effect<br>文字淡入效果的TextView。<br>运行环境：Android 4.0+, API 14+</p></blockquote><a id="more"></a><p>使用方式：<br>Gradle依赖：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">  compile <span class="string">'com.antonionicolaspina:revealtextview:2.0'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>布局文件中：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.antonionicolaspina.revealtextview.RevealTextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:rtv_duration</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"Hello Reveal Text!"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>效果图<br><img src="/assets/images/posts/android/revealtextview.gif" alt></p><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><p>自定义TextView，利用多线程控制动画的时间，主要是借助<code>SpannableStringBuilder</code>来实现文字的闪烁效果的。<br>首先在初始化时，调用开始动画的操作<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(TypedArray attrs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">animationDuration = attrs.getInteger(R.styleable.RevealTextView_rtv_duration, animationDuration);</span><br><span class="line">text = attrs.getString(R.styleable.RevealTextView_android_text);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">attrs.recycle();</span><br><span class="line">&#125;</span><br><span class="line">setAnimatedText(text);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在设置动画字体的方法中，生成接下来要使用的透明度的随机值、设置文字显示、以及重放动画效果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAnimatedText</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (TextUtils.isEmpty(text)) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.text = text;</span><br><span class="line">alphas = <span class="keyword">new</span> <span class="keyword">double</span>[text.length()];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; text.length(); i++) &#123;</span><br><span class="line">alphas[i] = Math.random() - <span class="number">1.0f</span>;</span><br><span class="line">&#125;</span><br><span class="line">setText(text);</span><br><span class="line">replayAnimation();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就是在run方法中启动动画。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> color = getCurrentTextColor();</span><br><span class="line">red = Color.red(color);</span><br><span class="line">green = Color.green(color);</span><br><span class="line">blue = Color.blue(color);</span><br><span class="line"></span><br><span class="line">ValueAnimator animator = ValueAnimator.ofFloat(<span class="number">0f</span>, <span class="number">2f</span>);</span><br><span class="line">animator.setDuration(animationDuration);</span><br><span class="line">animator.setInterpolator(<span class="keyword">new</span> LinearInterpolator());</span><br><span class="line">animator.addUpdateListener(<span class="keyword">this</span>);</span><br><span class="line"><span class="keyword">if</span> (isLoop) &#123;</span><br><span class="line">animator.setRepeatMode(ValueAnimator.REVERSE);</span><br><span class="line">animator.setRepeatCount(ValueAnimator.INFINITE);</span><br><span class="line">&#125;</span><br><span class="line">animator.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>最后就是关于动画的更新。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator valueAnimator)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">float</span> value = (<span class="keyword">float</span>) valueAnimator.getAnimatedValue();</span><br><span class="line">    SpannableStringBuilder builder = <span class="keyword">new</span> SpannableStringBuilder(text);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;text.length(); i++) &#123;</span><br><span class="line">      builder.setSpan(<span class="keyword">new</span> ForegroundColorSpan(Color.argb(clamp(value + alphas[i]), red, green, blue)), i, i+<span class="number">1</span>, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line">    &#125;</span><br><span class="line">    setText(builder);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>讲解可能不是很清楚，还存在着诸多漏洞，请多包涵。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。</p><p><a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="https://github.com/ANPez/RevealTextView" target="_blank">https://github.com/ANPez/RevealTextView</a>    </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/11/22/android-github-revealtextview/" target="_blank" rel="noopener">好用的开源项目–RevealTextView</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这段时间有点小偷懒^_^，好久没有更新文章了，想想都有点罪恶感ヽ(●-`Д´-)ノ。为了弥补我的罪恶感，我准备给自己的博客新加一个系列————好用的开源项目（PS：名字有点low，大家多多包含）， 这个系列将为大家带来 &lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt; 上面一些好用、有趣开源项目的使用，及个人的一点小见解（我会尽量月月更的。。。）。让我们一起学习吧！一起进步吧！&lt;/p&gt;
&lt;p&gt;作为本系列的第一个开源项目，今天的主角是————&lt;a href=&quot;https://github.com/ANPez/RevealTextView&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RevealTextView&lt;/a&gt;&lt;br&gt;项目地址： &lt;a href=&quot;https://github.com/ANPez/RevealTextView&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ANPez/RevealTextView&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/skylarklxlong/SkylarkDemo&quot; target=&quot;_blank&quot;&gt;项目源代码&lt;/a&gt;   &lt;/p&gt;
&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;A TextView subclass to show a reveal effect&lt;br&gt;文字淡入效果的TextView。&lt;br&gt;运行环境：Android 4.0+, API 14+&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
      <category term="开源" scheme="http://yoursite.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="TextView" scheme="http://yoursite.com/tags/TextView/"/>
    
  </entry>
  
  <entry>
    <title>Android onTouchEvent的MotionEvent.ACTION_UP不响应</title>
    <link href="http://yoursite.com/2017/10/27/android-ontouchevent-actionup-no-work/"/>
    <id>http://yoursite.com/2017/10/27/android-ontouchevent-actionup-no-work/</id>
    <published>2017-10-27T00:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<p>在使用<code>OnTouchListener()</code>方法时，发现竟然只能监听到<code>MotionEvent.ACTION_DOWN</code>操作，而无法监听到其他的操作，如：<code>MotionEvent.ACTION_UP</code>、<code>MotionEvent.ACTION_MOVE</code>等，都监测不到。代码如下:    </p><pre><code>linearLayout.setOnTouchListener(new View.OnTouchListener() {    @Override    public boolean onTouch(View v, MotionEvent event) {        int action = event.getAction();        switch (action){            case MotionEvent.ACTION_DOWN:                Log.e(TAG, &quot;onTouch: down&quot;);            break;            case MotionEvent.ACTION_UP:                Log.e(TAG, &quot;onTouch: up&quot;);            break;            case MotionEvent.ACTION_MOVE:                Log.e(TAG, &quot;onTouch: move&quot;);            break;        }    return ActionUpActivity.super.onTouchEvent(event);    }});</code></pre><a id="more"></a><p>Log输出如下：<br>E/ActionUpActivity: onTouch: down<br>E/ActionUpActivity: onTouch: down<br>E/ActionUpActivity: onTouch: down</p><p>感觉这样写没有问题啊，但是为什么就是只能监听到<code>MotionEvent.ACTION_DOWN</code>呢？    </p><p>原来是<code>return ActionUpActivity.super.onTouchEvent(event);</code>实际上返回的时<code>false</code>，而这里如果返回<code>false</code>的话，<code>Android</code>系统将不会在通知该手势中的其他任何事件；如果想继续捕捉到其他手势事件，则这里就要返回一个<code>true</code>。     </p><p>正确写法如下：    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">linearLayout.setOnTouchListener(<span class="keyword">new</span> View.OnTouchListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> startX;</span><br><span class="line">            <span class="keyword">int</span> startY;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">int</span> action = event.getAction();</span><br><span class="line">                <span class="keyword">switch</span> (action)&#123;</span><br><span class="line">                    <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                        Log.e(TAG, <span class="string">"onTouch: down"</span>);</span><br><span class="line">                        startX = (<span class="keyword">int</span>) event.getRawX();</span><br><span class="line">                        startY = (<span class="keyword">int</span>) event.getRawY();</span><br><span class="line"></span><br><span class="line">                        Log.e(TAG,<span class="string">"startX: "</span>+startX + <span class="string">" startY: "</span> + startY);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                        Log.e(TAG, <span class="string">"onTouch: up"</span>);</span><br><span class="line">                        startX = (<span class="keyword">int</span>) event.getRawX();</span><br><span class="line">                        startY = (<span class="keyword">int</span>) event.getRawY();</span><br><span class="line"></span><br><span class="line">                        Log.e(TAG,<span class="string">"startX: "</span>+startX + <span class="string">" startY: "</span> + startY);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                        Log.e(TAG, <span class="string">"onTouch: move"</span>);</span><br><span class="line">                        <span class="keyword">int</span> newX = (<span class="keyword">int</span>) event.getRawX();</span><br><span class="line">                        <span class="keyword">int</span> newY = (<span class="keyword">int</span>) event.getRawY();</span><br><span class="line">                        <span class="keyword">int</span> dx = newX - startX;</span><br><span class="line">                        <span class="keyword">int</span> dy = newY - startY;</span><br><span class="line"></span><br><span class="line">                        Log.e(TAG,<span class="string">"移动的dx: "</span>+dx + <span class="string">" 移动的dy: "</span> + dy);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//重新初始化手指的位置</span></span><br><span class="line">                        startX = (<span class="keyword">int</span>) event.getRawX();</span><br><span class="line">                        startY = (<span class="keyword">int</span>) event.getRawY();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// <span class="doctag">TODO:</span> 2017/10/30 如果这里为false，则只能监听到ACTION_DOWN,其他的都监听不到</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="comment">//                return ActionUpActivity.super.onTouchEvent(event);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是关于，<code>Android onTouchEvent</code>的<code>MotionEvent.ACTION_UP</code>不响应的问题的解决方式。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，<code>Android</code>的相关知识，欢迎继续关注我博客的更新。</p><p><a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="https://stackoverflow.com/questions/12588263/in-ontouchevent-action-up-doesnt-work" target="_blank">In onTouchEvent, ACTION_UP doesn’t work</a>    </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/10/27/android-ontouchevent-actionup-no-work/" target="_blank" rel="noopener">Android自定义图形-Shape的使用</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用&lt;code&gt;OnTouchListener()&lt;/code&gt;方法时，发现竟然只能监听到&lt;code&gt;MotionEvent.ACTION_DOWN&lt;/code&gt;操作，而无法监听到其他的操作，如：&lt;code&gt;MotionEvent.ACTION_UP&lt;/code&gt;、&lt;code&gt;MotionEvent.ACTION_MOVE&lt;/code&gt;等，都监测不到。代码如下:    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;linearLayout.setOnTouchListener(new View.OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
        int action = event.getAction();
        switch (action){
            case MotionEvent.ACTION_DOWN:
                Log.e(TAG, &amp;quot;onTouch: down&amp;quot;);
            break;
            case MotionEvent.ACTION_UP:
                Log.e(TAG, &amp;quot;onTouch: up&amp;quot;);
            break;
            case MotionEvent.ACTION_MOVE:
                Log.e(TAG, &amp;quot;onTouch: move&amp;quot;);
            break;
        }
    return ActionUpActivity.super.onTouchEvent(event);
    }
});
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Error" scheme="http://yoursite.com/tags/Error/"/>
    
  </entry>
  
  <entry>
    <title>你好Hexo,你好Yilia</title>
    <link href="http://yoursite.com/2017/10/16/hello-hexo-and-yilia/"/>
    <id>http://yoursite.com/2017/10/16/hello-hexo-and-yilia/</id>
    <published>2017-10-16T14:00:00.000Z</published>
    <updated>2020-01-31T07:26:54.743Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/images/posts/common/2017_09_22_ronnaldong.jpg" width="400" height="458"></p><p><em>By ronnaldong From Instagram</em></p><p>是的，我换主题了。</p><a id="more"></a><p>在最开始搭建Blog时就像用 <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">Yilia</a> 主题，他真的非常帮，<br>最初由于网络的原因，没法在我的电脑上使用 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> ,所以就没能使用。   </p><p>经过这段时间的摸索，终于完成了使用Yilia主题的Blog ^_^。   </p><p>嗯，之后再找个时间把搭建的过程详细记录下来。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/assets/images/posts/common/2017_09_22_ronnaldong.jpg&quot; width=&quot;400&quot; height=&quot;458&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;By ronnaldong From Instagram&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;是的，我换主题了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="yilia" scheme="http://yoursite.com/tags/yilia/"/>
    
  </entry>
  
  <entry>
    <title>Can&#39;t toast on a thread that has not called Looper.prepare()</title>
    <link href="http://yoursite.com/2017/09/29/android-toast-error-on-thread/"/>
    <id>http://yoursite.com/2017/09/29/android-toast-error-on-thread/</id>
    <published>2017-09-28T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近一段时间在忙着开发一款自己的APP，将自己常用的功能需求都加入进入，同时在GitHub上跟着大牛们学习新的技术，提升自己的技能，在开发的过程中不断的发现问题和解决问题。<br>在开发过程遇到了这样一个问题：<code>Can&#39;t toast on a thread that has not called Looper.prepare()</code>，如果在一个线程中没有调用Looper.prepare(),就不能在该线程中创建Toast。这个问题是因为在子线程中弹出Toast导致的。<br>Android是不能直接在子线程中弹出Toast的，可是如果我们非要这么做，那该怎么办呢？下面就为大家讲解如何在子线程中弹出Toast，以及一些其他类似的子线程中操作的错误。</p><p>​<br><a id="more"></a></p><h3 id="在子线程中调用Toast"><a href="#在子线程中调用Toast" class="headerlink" title="在子线程中调用Toast"></a>在子线程中调用Toast</h3><blockquote><p>在子线程中弹出Toast，会报错：java.lang.RuntimeException: Can’t toast on a thread that has not called Looper.prepare()。</p></blockquote><p>解决方式：先调用<code>Looper.prepare();</code>再调用<code>Toast.makeText().show();</code>最后再调用<code>Looper.loop();</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ToastUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> Toast toast = <span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Context context, String text)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(toast!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                toast.setText(text);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                toast= Toast.makeText(context, text, Toast.LENGTH_SHORT);</span><br><span class="line">            &#125;</span><br><span class="line">            toast.show();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">//解决在子线程中调用Toast的异常情况处理</span></span><br><span class="line">            Looper.prepare();</span><br><span class="line">            Toast.makeText(context, text, Toast.LENGTH_SHORT).show();</span><br><span class="line">            Looper.loop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在子线程中更新UI"><a href="#在子线程中更新UI" class="headerlink" title="在子线程中更新UI"></a>在子线程中更新UI</h3><blockquote><p>在子线程中更新UI，会报错：android.view.ViewRootImpl$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views.</p></blockquote><p>解决方式：在子线程中更新UI，一般使用Handler或者runOnUiThread()或者AsyncTask。</p><h3 id="在子线程中创建Handler"><a href="#在子线程中创建Handler" class="headerlink" title="在子线程中创建Handler"></a>在子线程中创建Handler</h3><blockquote><p>在子线程中创建Handler，会报错：java.lang.RuntimeException: Can’t create handler inside thread that has not called Looper.prepare()。</p></blockquote><p>解决方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">　　<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">　　　　Looper.prepare();</span><br><span class="line">　　　　<span class="keyword">new</span> Handler().post(runnable);<span class="comment">//在子线程中直接去new 一个handler</span></span><br><span class="line">　　　　Looper.loop();　　　　<span class="comment">//这种情况下，Runnable对象是运行在子线程中的，可以进行联网操作，但是不能更新UI</span></span><br><span class="line">　　&#125;</span><br><span class="line">&#125;.start();</span><br></pre></td></tr></table></figure></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是在子线程中更新UI、弹出Toast、创建Handler时会遇到的问题，及解决方式。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://www.cnblogs.com/jingmo0319/p/5730963.html" target="_blank">在子线程中new Handler报错</a>   </li><li><a href="http://blog.csdn.net/heng615975867/article/details/9194219" target="_blank">Android – Looper.prepare()和Looper.loop() —深入版</a> </li><li><a href="http://jeff-pluto-1874.iteye.com/blog/869710" target="_blank">Toast和Looper、Handler消息循环机制</a> </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/09/29/android-toast-error-on-thread/" target="_blank" rel="noopener">Can’t toast on a thread that has not called Looper.prepare()</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近一段时间在忙着开发一款自己的APP，将自己常用的功能需求都加入进入，同时在GitHub上跟着大牛们学习新的技术，提升自己的技能，在开发的过程中不断的发现问题和解决问题。&lt;br&gt;在开发过程遇到了这样一个问题：&lt;code&gt;Can&amp;#39;t toast on a thread that has not called Looper.prepare()&lt;/code&gt;，如果在一个线程中没有调用Looper.prepare(),就不能在该线程中创建Toast。这个问题是因为在子线程中弹出Toast导致的。&lt;br&gt;Android是不能直接在子线程中弹出Toast的，可是如果我们非要这么做，那该怎么办呢？下面就为大家讲解如何在子线程中弹出Toast，以及一些其他类似的子线程中操作的错误。&lt;/p&gt;
&lt;p&gt;​&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Error" scheme="http://yoursite.com/tags/Error/"/>
    
      <category term="Toast" scheme="http://yoursite.com/tags/Toast/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio Generate Signed APK 错误汇总</title>
    <link href="http://yoursite.com/2017/09/12/android-studio-generatesigned-apk-error/"/>
    <id>http://yoursite.com/2017/09/12/android-studio-generatesigned-apk-error/</id>
    <published>2017-09-11T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>总结一下最近使用Android Studio 签名APK时遇到的问题。</p><a id="more"></a><h3 id="错误汇总"><a href="#错误汇总" class="headerlink" title="错误汇总"></a>错误汇总</h3><ul><li>问题一<blockquote><p>Error: Avoid non-default constructors in fragments: use a default constructor plus Fragment#setArguments(Bundle) instead [ValidFragment]</p></blockquote></li></ul><p><a href="https://stackoverflow.com/questions/30638421/error-avoid-non-default-constructors-in-fragments-use-a-default-constructor-pl" target="_blank" rel="noopener">参考链接</a></p><p>解决方式：在Moudel下的build.gradle添加如下代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    lintOptions &#123;</span><br><span class="line">        checkReleaseBuilds <span class="keyword">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>问题二<blockquote><p>Error: Expected resource of type styleable [ResourceType]<br>Error: Expected resource of type id [ResourceTyp]<br>Error: Expected resource of type raw [ResourceType]</p></blockquote></li></ul><p><a href="http://blog.csdn.net/wan903531306/article/details/51802272" target="_blank" rel="noopener">参考链接</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"ResourceType"</span>)</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是目前在使用Android Studio签名APK时遇到的问题的解决方式。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。  </p><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/09/12/android-studio-generatesigned-apk-error/" target="_blank" rel="noopener">Android Studio Generate Signed APK 错误汇总</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;总结一下最近使用Android Studio 签名APK时遇到的问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
      <category term="Signed APK" scheme="http://yoursite.com/tags/Signed-APK/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio导入Eclipse项目工程错误汇总</title>
    <link href="http://yoursite.com/2017/09/09/eclipse-project-to-android-studio-error/"/>
    <id>http://yoursite.com/2017/09/09/eclipse-project-to-android-studio-error/</id>
    <published>2017-09-08T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近有几个Eclipse下的项目需要导入到Android Studio中，本想应该很简单的，谁知遇到了一大推的问题，特地在此记录一下（后续如果有遇到其他的问题再添加进来）。</p><a id="more"></a><h3 id="错误汇总"><a href="#错误汇总" class="headerlink" title="错误汇总"></a>错误汇总</h3><ul><li>错误一 <blockquote><p>Error:Application and test application id cannot be the same: both are ‘cn.example.application’ for debugAndroidTest</p></blockquote></li></ul><p>这个错误是因为<code>applicationId</code>和<code>testApplicationId</code>相同。</p><p>解决方法：修改项目Module下build.gradle中的testApplicationId,不能和applicationId相同。</p><ul><li>错误二<blockquote><p>Error: java.lang.RuntimeException: Some file crunching failed, see logs for details</p></blockquote></li></ul><p>解决方法：这个错误经过验证发现是因为项目中有些 <code>.9.png</code> 不符合Android Studio的要求，所以只需要重新绘制 <code>.9.png</code>即可。</p><ul><li>错误三<blockquote><p>Error: NDK integration is deprecated in the current plugin.Consider trying the new experimental plugin.Set “$USE_DEPRECATED_NDK=true” in gradle.properties to continue using the current NDK integration.</p></blockquote></li></ul><p><a href="https://stackoverflow.com/questions/31979965/after-updating-android-studio-to-version-1-3-0-i-am-getting-ndk-integration-is" target="_blank" rel="noopener">参考解决方案</a></p><p>解决方法：在项目的根目录添加<code>gradle.properties</code>文件，并在文件中添加<code>android.useDeprecatedNdk=true</code></p><ul><li>错误四 <blockquote><p>Error:(97) undefined reference to __android_log_print</p></blockquote></li></ul><p><a href="http://blog.csdn.net/keyue0459/article/details/8764508" target="_blank" rel="noopener">参考解决方案</a></p><p>解决方法：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Android.mk中增加LOCAL_LDLIBS    := -lm -llog </span><br><span class="line">宏定义</span><br><span class="line">#define  LOG_TAG    “skylark<span class="string">"</span></span><br><span class="line"><span class="string">#define  LOGI(...)  __android_log_print(ANDROID_LOG_INFO,LOG_TAG,</span></span><br><span class="line"><span class="string">__VA_ARGS__)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">还要加#include &lt;Android/log.h&gt;</span></span><br><span class="line"><span class="string">注意android.mk 里有一行include $(CLEAR_VARS)</span></span><br><span class="line"><span class="string">必须把LOCAL_LDLIBS :=-llog放在它后面才有用，否则相当于没写</span></span><br></pre></td></tr></table></figure></p><ul><li>错误五<blockquote><p>Error while executing ‘D:\Software\Android\sdk\ndk-bundle\ndk-build.cmd’<br>with arguments {<br>NDK_PROJECT_PATH=null<br>APP_BUILD_SCRIPT=E:\xxx\build\intermediates\ndk\release\Android.mk APP_PLATFORM=android-21<br>NDK_OUT=E:\xxx\build\intermediates\ndk\release\obj<br>NDK_LIBS_OUT=E:\xxx\build\intermediates\ndk\release\lib APP_ABI=all<br>}</p></blockquote></li></ul><p><a href="http://blog.csdn.net/wyyl1/article/details/44198179" target="_blank" rel="noopener">参考解决方案</a></p><p>解决方法：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在有JNI的那个项目下的build.gradle文件中添加如下代码</span></span><br><span class="line">android &#123;  </span><br><span class="line">    ...  </span><br><span class="line">    sourceSets.main &#123;  </span><br><span class="line">        jni.srcDirs = []  </span><br><span class="line">        jniLibs.srcDir <span class="string">'src/main/libs'</span>  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>错误六<blockquote><p>Manifest merger failed : Attribute application@name value=(cn.example.application.MyApp) from AndroidManifest.xml is also present at [APP:MyProject:unspecified] AndroidManifest.xml value=(cn.example.application.MyApp).<br>Suggestion: add ‘tools:replace=”android:name”‘ to <application> element at AndroidManifest.xml to override.</application></p></blockquote></li></ul><p>解决方法：修改AndroidManifest.xml中的<application>标签下的application的name，改为全名称，也就是包名.类名，并加上tools:replace=”android:name”</application></p><ul><li>错误七<blockquote><p>E:\AndroidStudioProjects\MyApplication\APP\src\main\java\com\MainActivity.java<br>Error:(1, 1) 错误: 非法字符: ‘\ufeff’<br>Error:(1, 10) 错误: 需要class, interface或enum</p></blockquote></li></ul><p>这个问题是由于文件编码的错误导致的。</p><p>解决方法：利用notepad++ 将MainActivity.java的编码格式改为以UTF-8无BOM格式编码</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是目前遇到的Eclipse项目导入到Android Studio中产生的错误。后续如果还有其他问题会将其加入其中。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。  </p><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/09/09/eclipse-project-to-android-studio-error/" target="_blank" rel="noopener">Android Studio导入Eclipse项目工程错误汇总</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近有几个Eclipse下的项目需要导入到Android Studio中，本想应该很简单的，谁知遇到了一大推的问题，特地在此记录一下（后续如果有遇到其他的问题再添加进来）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
      <category term="Eclipse" scheme="http://yoursite.com/tags/Eclipse/"/>
    
  </entry>
  
  <entry>
    <title>基于VLC框架的Android视频播放器Demo</title>
    <link href="http://yoursite.com/2017/09/07/vlc-android-demo/"/>
    <id>http://yoursite.com/2017/09/07/vlc-android-demo/</id>
    <published>2017-09-07T04:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 <a href="https://skylarklxlong.github.io/2017/08/26/ubuntu-compile-vlc-android/" target="_blank" rel="noopener">从零开始，手把手教你如何在Ubuntu下编译VLC-Android源码</a> 文章中为大家讲解了如何在Ubuntu环境下编译VLC-Android源码，这篇文章就为大家讲解如何使用编译好的 <code>libvlc-3.0.0.aar</code> 包来编写一个视频播放器 <a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>。</p><a id="more"></a><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p><code>build.gradle</code> 中配置使用 <code>libvlc-3.0.0.aar</code> 包</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//---1、---</span></span><br><span class="line">repositories&#123;</span><br><span class="line">    flatDir&#123;</span><br><span class="line">        dirs <span class="string">'libs'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">...</span><br><span class="line">    <span class="comment">//---2、---</span></span><br><span class="line">    compile(<span class="string">name:</span><span class="string">'libvlc-3.0.0'</span>,<span class="string">ext:</span><span class="string">'aar'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>界面布局很简单，一个FrameLayout中嵌套一个SurfaceView。    </p><p>布局实现<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/ll_vlc"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SurfaceView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/surface_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Activity或者Fragment要实现 <code>IVLCVout.OnNewVideoLayoutListener</code> 接口，实现 <code>onNewVideoLayout</code>方法，在 <code>onNewVideoLayout</code> 方法中根据屏幕大小来动态控制视频播放显示区域大小。</p><p>代码实现<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VLCActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivityForFullScreen</span> <span class="keyword">implements</span> <span class="title">IVLCVout</span>.<span class="title">OnNewVideoLayoutListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SAMPLE_URL = <span class="string">"http://download.blender.org/peach/bigbuckbunny_movies/BigBuckBunny_640x360.m4v"</span>;</span><br><span class="line"></span><br><span class="line">    SurfaceView surfaceView = <span class="keyword">null</span>;</span><br><span class="line">    FrameLayout frameLayout = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    LibVLC mLibVLC = <span class="keyword">null</span>;</span><br><span class="line">    MediaPlayer mMediaPlayer = <span class="keyword">null</span>;</span><br><span class="line">    IVLCVout mIVLCVout = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    View.OnLayoutChangeListener onLayoutChangeListener = <span class="keyword">null</span>;</span><br><span class="line">    Handler handler = <span class="keyword">new</span> Handler();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mVideoHeight = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mVideoWidth = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mVideoVisibleHeight = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mVideoVisibleWidth = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mVideoSarNum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mVideoSarDen = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SURFACE_BEST_FIT = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SURFACE_FIT_SCREEN = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SURFACE_FILL = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SURFACE_16_9 = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SURFACE_4_3 = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SURFACE_ORIGINAL = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> CURRENT_SIZE = SURFACE_BEST_FIT;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_vlc);</span><br><span class="line"></span><br><span class="line">        surfaceView = (SurfaceView) findViewById(R.id.surface_view);</span><br><span class="line">        frameLayout = (FrameLayout) findViewById(R.id.ll_vlc);</span><br><span class="line"></span><br><span class="line">        mLibVLC = <span class="keyword">new</span> LibVLC(<span class="keyword">this</span>);</span><br><span class="line">        mMediaPlayer = <span class="keyword">new</span> MediaPlayer(mLibVLC);</span><br><span class="line"></span><br><span class="line">        mIVLCVout = mMediaPlayer.getVLCVout();</span><br><span class="line">        <span class="keyword">if</span> (surfaceView != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mIVLCVout.setVideoView(surfaceView);</span><br><span class="line">        &#125;</span><br><span class="line">        mIVLCVout.attachViews();</span><br><span class="line">        Media media = <span class="keyword">new</span> Media(mLibVLC, Uri.parse(SAMPLE_URL));</span><br><span class="line">        mMediaPlayer.setMedia(media);</span><br><span class="line">        media.release();</span><br><span class="line">        mMediaPlayer.play();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (onLayoutChangeListener == <span class="keyword">null</span>) &#123;</span><br><span class="line">            onLayoutChangeListener = <span class="keyword">new</span> View.OnLayoutChangeListener() &#123;</span><br><span class="line">                <span class="keyword">private</span> <span class="keyword">final</span> Runnable runnable = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        updateVideoSurfaces();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLayoutChange</span><span class="params">(View view, <span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right,</span></span></span><br><span class="line"><span class="function"><span class="params">                                           <span class="keyword">int</span> bottom, <span class="keyword">int</span> oldLeft, <span class="keyword">int</span> oldTop, <span class="keyword">int</span> oldRight, <span class="keyword">int</span> oldBottom)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (left != oldLeft || top != oldTop || right != oldRight || bottom != oldBottom) &#123;</span><br><span class="line">                        handler.removeCallbacks(runnable);</span><br><span class="line">                        handler.post(runnable);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        frameLayout.addOnLayoutChangeListener(onLayoutChangeListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">changeMediaPlayerLayout</span><span class="params">(<span class="keyword">int</span> displayW, <span class="keyword">int</span> displayH)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/* Change the video placement using the MediaPlayer API */</span></span><br><span class="line">        <span class="keyword">switch</span> (CURRENT_SIZE) &#123;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_BEST_FIT:</span><br><span class="line">                mMediaPlayer.setAspectRatio(<span class="keyword">null</span>);</span><br><span class="line">                mMediaPlayer.setScale(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_FIT_SCREEN:</span><br><span class="line">            <span class="keyword">case</span> SURFACE_FILL: &#123;</span><br><span class="line">                Media.VideoTrack vtrack = mMediaPlayer.getCurrentVideoTrack();</span><br><span class="line">                <span class="keyword">if</span> (vtrack == <span class="keyword">null</span>)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">boolean</span> videoSwapped = vtrack.orientation == Media.VideoTrack.Orientation.LeftBottom</span><br><span class="line">                        || vtrack.orientation == Media.VideoTrack.Orientation.RightTop;</span><br><span class="line">                <span class="keyword">if</span> (CURRENT_SIZE == SURFACE_FIT_SCREEN) &#123;</span><br><span class="line">                    <span class="keyword">int</span> videoW = vtrack.width;</span><br><span class="line">                    <span class="keyword">int</span> videoH = vtrack.height;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (videoSwapped) &#123;</span><br><span class="line">                        <span class="keyword">int</span> swap = videoW;</span><br><span class="line">                        videoW = videoH;</span><br><span class="line">                        videoH = swap;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (vtrack.sarNum != vtrack.sarDen)</span><br><span class="line">                        videoW = videoW * vtrack.sarNum / vtrack.sarDen;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">float</span> ar = videoW / (<span class="keyword">float</span>) videoH;</span><br><span class="line">                    <span class="keyword">float</span> dar = displayW / (<span class="keyword">float</span>) displayH;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">float</span> scale;</span><br><span class="line">                    <span class="keyword">if</span> (dar &gt;= ar)</span><br><span class="line">                        scale = displayW / (<span class="keyword">float</span>) videoW; <span class="comment">/* horizontal */</span></span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        scale = displayH / (<span class="keyword">float</span>) videoH; <span class="comment">/* vertical */</span></span><br><span class="line">                    mMediaPlayer.setScale(scale);</span><br><span class="line">                    mMediaPlayer.setAspectRatio(<span class="keyword">null</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mMediaPlayer.setScale(<span class="number">0</span>);</span><br><span class="line">                    mMediaPlayer.setAspectRatio(!videoSwapped ? <span class="string">""</span> + displayW + <span class="string">":"</span> + displayH</span><br><span class="line">                            : <span class="string">""</span> + displayH + <span class="string">":"</span> + displayW);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_16_9:</span><br><span class="line">                mMediaPlayer.setAspectRatio(<span class="string">"16:9"</span>);</span><br><span class="line">                mMediaPlayer.setScale(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_4_3:</span><br><span class="line">                mMediaPlayer.setAspectRatio(<span class="string">"4:3"</span>);</span><br><span class="line">                mMediaPlayer.setScale(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_ORIGINAL:</span><br><span class="line">                mMediaPlayer.setAspectRatio(<span class="keyword">null</span>);</span><br><span class="line">                mMediaPlayer.setScale(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateVideoSurfaces</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sw = getWindow().getDecorView().getWidth();</span><br><span class="line">        <span class="keyword">int</span> sh = getWindow().getDecorView().getHeight();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// sanity check</span></span><br><span class="line">        <span class="keyword">if</span> (sw * sh == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mMediaPlayer.getVLCVout().setWindowSize(sw, sh);</span><br><span class="line"></span><br><span class="line">        ViewGroup.LayoutParams lp = surfaceView.getLayoutParams();</span><br><span class="line">        <span class="keyword">if</span> (mVideoWidth * mVideoHeight == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">/* Case of OpenGL vouts: handles the placement of the video using MediaPlayer API */</span></span><br><span class="line">            lp.width = ViewGroup.LayoutParams.MATCH_PARENT;</span><br><span class="line">            lp.height = ViewGroup.LayoutParams.MATCH_PARENT;</span><br><span class="line">            surfaceView.setLayoutParams(lp);</span><br><span class="line">            lp = frameLayout.getLayoutParams();</span><br><span class="line">            lp.width = ViewGroup.LayoutParams.MATCH_PARENT;</span><br><span class="line">            lp.height = ViewGroup.LayoutParams.MATCH_PARENT;</span><br><span class="line">            frameLayout.setLayoutParams(lp);</span><br><span class="line">            changeMediaPlayerLayout(sw, sh);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lp.width == lp.height &amp;&amp; lp.width == ViewGroup.LayoutParams.MATCH_PARENT) &#123;</span><br><span class="line">            <span class="comment">/* We handle the placement of the video using Android View LayoutParams */</span></span><br><span class="line">            mMediaPlayer.setAspectRatio(<span class="keyword">null</span>);</span><br><span class="line">            mMediaPlayer.setScale(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> dw = sw, dh = sh;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> isPortrait = getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (sw &gt; sh &amp;&amp; isPortrait || sw &lt; sh &amp;&amp; !isPortrait) &#123;</span><br><span class="line">            dw = sh;</span><br><span class="line">            dh = sw;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// compute the aspect ratio</span></span><br><span class="line">        <span class="keyword">double</span> ar, vw;</span><br><span class="line">        <span class="keyword">if</span> (mVideoSarDen == mVideoSarNum) &#123;</span><br><span class="line">            <span class="comment">/* No indication about the density, assuming 1:1 */</span></span><br><span class="line">            vw = mVideoVisibleWidth;</span><br><span class="line">            ar = (<span class="keyword">double</span>) mVideoVisibleWidth / (<span class="keyword">double</span>) mVideoVisibleHeight;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* Use the specified aspect ratio */</span></span><br><span class="line">            vw = mVideoVisibleWidth * (<span class="keyword">double</span>) mVideoSarNum / mVideoSarDen;</span><br><span class="line">            ar = vw / mVideoVisibleHeight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// compute the display aspect ratio</span></span><br><span class="line">        <span class="keyword">double</span> dar = dw / dh;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (CURRENT_SIZE) &#123;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_BEST_FIT:</span><br><span class="line">                <span class="keyword">if</span> (dar &lt; ar)</span><br><span class="line">                    dh = dw / ar;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dw = dh * ar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_FIT_SCREEN:</span><br><span class="line">                <span class="keyword">if</span> (dar &gt;= ar)</span><br><span class="line">                    dh = dw / ar; <span class="comment">/* horizontal */</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dw = dh * ar; <span class="comment">/* vertical */</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_FILL:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_16_9:</span><br><span class="line">                ar = <span class="number">16.0</span> / <span class="number">9.0</span>;</span><br><span class="line">                <span class="keyword">if</span> (dar &lt; ar)</span><br><span class="line">                    dh = dw / ar;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dw = dh * ar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_4_3:</span><br><span class="line">                ar = <span class="number">4.0</span> / <span class="number">3.0</span>;</span><br><span class="line">                <span class="keyword">if</span> (dar &lt; ar)</span><br><span class="line">                    dh = dw / ar;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dw = dh * ar;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SURFACE_ORIGINAL:</span><br><span class="line">                dh = mVideoVisibleHeight;</span><br><span class="line">                dw = vw;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set display size</span></span><br><span class="line">        lp.width = (<span class="keyword">int</span>) Math.ceil(dw * mVideoWidth / mVideoVisibleWidth);</span><br><span class="line">        lp.height = (<span class="keyword">int</span>) Math.ceil(dh * mVideoHeight / mVideoVisibleHeight);</span><br><span class="line">        surfaceView.setLayoutParams(lp);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set frame size (crop if necessary)</span></span><br><span class="line">        lp = frameLayout.getLayoutParams();</span><br><span class="line">        lp.width = (<span class="keyword">int</span>) Math.floor(dw);</span><br><span class="line">        lp.height = (<span class="keyword">int</span>) Math.floor(dh);</span><br><span class="line">        frameLayout.setLayoutParams(lp);</span><br><span class="line"></span><br><span class="line">        surfaceView.invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNewVideoLayout</span><span class="params">(IVLCVout vlcVout, <span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">int</span> visibleWidth,</span></span></span><br><span class="line"><span class="function"><span class="params">                                 <span class="keyword">int</span> visibleHeight, <span class="keyword">int</span> sarNum, <span class="keyword">int</span> sarDen)</span> </span>&#123;</span><br><span class="line">        mVideoWidth = width;</span><br><span class="line">        mVideoHeight = height;</span><br><span class="line">        mVideoVisibleWidth = visibleWidth;</span><br><span class="line">        mVideoVisibleHeight = visibleHeight;</span><br><span class="line">        mVideoSarNum = sarNum;</span><br><span class="line">        mVideoSarDen = sarDen;</span><br><span class="line">        updateVideoSurfaces();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        <span class="keyword">if</span> (onLayoutChangeListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">            frameLayout.removeOnLayoutChangeListener(onLayoutChangeListener);</span><br><span class="line">            onLayoutChangeListener = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mMediaPlayer.stop();</span><br><span class="line"></span><br><span class="line">        mMediaPlayer.getVLCVout().detachViews();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        mMediaPlayer.release();</span><br><span class="line">        mLibVLC.release();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是如何使用<code>libvlc-3.0.0.aar</code>包来实现自己的视频播放器。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。  </p><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/09/07/vlc-android-demo/" target="_blank" rel="noopener">基于VLC框架的Android视频播放器Demo</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在 &lt;a href=&quot;https://skylarklxlong.github.io/2017/08/26/ubuntu-compile-vlc-android/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;从零开始，手把手教你如何在Ubuntu下编译VLC-Android源码&lt;/a&gt; 文章中为大家讲解了如何在Ubuntu环境下编译VLC-Android源码，这篇文章就为大家讲解如何使用编译好的 &lt;code&gt;libvlc-3.0.0.aar&lt;/code&gt; 包来编写一个视频播放器 &lt;a href=&quot;https://github.com/skylarklxlong/SkylarkDemo&quot; target=&quot;_blank&quot;&gt;项目源代码&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="VLC" scheme="http://yoursite.com/tags/VLC/"/>
    
  </entry>
  
  <entry>
    <title>Android调用外部ContentProvider失败</title>
    <link href="http://yoursite.com/2017/09/07/android-permission-denial-opening-provider/"/>
    <id>http://yoursite.com/2017/09/07/android-permission-denial-opening-provider/</id>
    <published>2017-09-07T00:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>无意中遇到调用外部的 <code>ContentProvider</code> 报 <code>java.lang.SecurityException: Permission Denial: opening provider</code>错误， 记录一下解决方法。</p><a id="more"></a><h3 id="错误原因及解决方法"><a href="#错误原因及解决方法" class="headerlink" title="错误原因及解决方法"></a>错误原因及解决方法</h3><blockquote><p>报错日志   </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Process: online.himakeit.testcontentprovider, PID: <span class="number">6668</span></span><br><span class="line">java.lang.SecurityException: Permission Denial: opening provider </span><br><span class="line">online.himakeit.skylarkdemo.provider.DBSQLProvider from ProcessRecord&#123;<span class="number">7</span>dc9495 <span class="number">6668</span>:online.himakeit.testcontentprovider/u0a93&#125; </span><br><span class="line">(pid=<span class="number">6668</span>, uid=<span class="number">10093</span>) that is not exported from UID <span class="number">10094</span></span><br><span class="line">    at android.os.Parcel.readException(Parcel.java:<span class="number">1942</span>)</span><br><span class="line">    at android.os.Parcel.readException(Parcel.java:<span class="number">1888</span>)</span><br><span class="line">    at android.app.IActivityManager$Stub$Proxy.getContentProvider(IActivityManager.java:<span class="number">4771</span>)</span><br><span class="line">    at android.app.ActivityThread.acquireProvider(ActivityThread.java:<span class="number">5882</span>)</span><br><span class="line">    at android.app.ContextImpl$ApplicationContentResolver.acquireProvider(ContextImpl.java:<span class="number">2479</span>)</span><br><span class="line">    at android.content.ContentResolver.acquireProvider(ContentResolver.java:<span class="number">1733</span>)</span><br><span class="line">    at android.content.ContentResolver.insert(ContentResolver.java:<span class="number">1533</span>)</span><br><span class="line">    at online.himakeit.testcontentprovider.MainActivity.onClick(MainActivity.java:<span class="number">53</span>)</span><br><span class="line">    at android.view.View.performClick(View.java:<span class="number">6256</span>)</span><br><span class="line">    at android.view.View$PerformClick.run(View.java:<span class="number">24697</span>)</span><br><span class="line">    at android.os.Handler.handleCallback(Handler.java:<span class="number">789</span>)</span><br><span class="line">    at android.os.Handler.dispatchMessage(Handler.java:<span class="number">98</span>)</span><br><span class="line">    at android.os.Looper.loop(Looper.java:<span class="number">164</span>)</span><br><span class="line">    at android.app.ActivityThread.main(ActivityThread.java:<span class="number">6541</span>)</span><br><span class="line">    at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">    at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:<span class="number">240</span>)</span><br><span class="line">    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:<span class="number">767</span>)</span><br></pre></td></tr></table></figure><p>产生 <code>java.lang.SecurityException: Permission Denial: opening provider</code> 错误的原因是，外部的 <code>ContentProvider</code> 不能被外部所调用。</p><p>解决方式就是在定义 <code>ContentProvider</code> 时在 <code>&lt;provider&gt;</code> 标签下添加 <code>android:exported=&quot;true&quot;</code> 属性，并将其值设为 <code>true</code> 。</p><blockquote><ul><li><code>android:exported</code> 主要作用是：是否支持其他应用调用当前组件</li><li><code>Android</code> 中的四大组件 <code>Activity</code>、<code>Service</code>、<code>ContentProvider</code>、<code>BroadcastReceiver</code> 都有 <code>android:exported</code>这个属性</li></ul></blockquote><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是如何解决<code>java.lang.SecurityException: Permission Denial: opening provider</code>问题。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。   </p><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/09/07/android-permission-denial-opening-provider/" target="_blank" rel="noopener">Android调用外部ContentProvider失败</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;无意中遇到调用外部的 &lt;code&gt;ContentProvider&lt;/code&gt; 报 &lt;code&gt;java.lang.SecurityException: Permission Denial: opening provider&lt;/code&gt;错误， 记录一下解决方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="ContentProvider" scheme="http://yoursite.com/tags/ContentProvider/"/>
    
      <category term="Android四大组件" scheme="http://yoursite.com/tags/Android%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>从零开始，手把手教你如何在Ubuntu下编译VLC-Android源码</title>
    <link href="http://yoursite.com/2017/08/26/ubuntu-compile-vlc-android/"/>
    <id>http://yoursite.com/2017/08/26/ubuntu-compile-vlc-android/</id>
    <published>2017-08-25T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>公司项目中使用的<code>libvlcjni.so</code>库文件,有点老，对<code>Android 6.0+</code>系统兼容性太差了，当程序运行在<code>Android6.0+</code>系统上时，回弹出警告框，提示<code>libvlcjni.so：text relocations</code>异常，虽然，程序播放视频没有问题，但是，总是弹出提示框就非常不友好了，为此，就需要重新编译一个新的库文件。<br>由于，在编译中遇到了一大堆难题，足足花了3天时间才将<code>VLC-Android</code>源码编译成功。期间在网上查找了不少参考资料，但是，大都介绍太过详细，好多地方没有将清楚，非常容易误导他人，所以，决定下一篇详细的教程来记录此次编译的过程，希望能给大家带来帮助。<br>特别感谢 <a href="http://blog.csdn.net/wkw1125/article/details/56845405" target="_blank" rel="noopener">从零开始在Linux编译VLC-Android开源项目</a> 这篇博客给我带来的帮助！</p><a id="more"></a><h3 id="VLC简介"><a href="#VLC简介" class="headerlink" title="VLC简介"></a>VLC简介</h3><p>VLC 是一款自由、开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件，以及 DVD、音频 CD、VCD 及各类流媒体协议。VLC使用C语言开发，可跨平台编译为其他系统所用；<code>VLC-android</code>是将<code>VLC</code>编译为<code>Android</code>可调用类库（*.so）的工程。<br><a href="http://www.videolan.org" target="_blank" rel="noopener">VLC官网</a><br><a href="https://wiki.videolan.org/AndroidCompile/" target="_blank" rel="noopener">VLC-Android编译官方文档</a></p><h3 id="编译系统配置"><a href="#编译系统配置" class="headerlink" title="编译系统配置"></a>编译系统配置</h3><blockquote><ul><li>编译系统环境为：Windows 10 企业版（版本1607）下 <code>VMware Workstation 12 Pro</code>（12.5.0 build-4352439）中安装的 <code>Ubuntu16.04 LTS 64位</code> 虚拟机。保证有一个稳定的网络环境，即使不能FQ也可以完成本次编译。    </li><li>本次编译的VLC-Android版本为2.1.16，代码时间为2017-08-10，SHA1 ID:<code>6a04fdb0f10daf70ec4cc449c78d53c2a379f399</code>   </li><li>本次编译的VLC版本未知，代码时间为2017-08-23，SHA1 ID：<code>85f0e45b2304afa64ace2e3f0ddc19ad8b5accfb</code></li><li>VLC编译环境代码 <code>git clone https://code.videolan.org/videolan/vlc-android.git</code>   </li><li>vlc源码 <code>git clone http://git.videolan.org/git/vlc.git vlc</code></li></ul></blockquote><h3 id="编译环境配置"><a href="#编译环境配置" class="headerlink" title="编译环境配置"></a>编译环境配置</h3><blockquote><ul><li>编译VLC源码需要安装 JDK、NDK、SDK、automake、ant、autopoint、cmake、build-essential、 libtool、patch、pkg-config、protobuf-compiler、ragel、subversion、unzip、git   </li><li>为了解决编译过程中不能下载 <code>build.gradle</code> 中的依赖环境问题，建议安装Android-Studio</li></ul></blockquote><h4 id="JDK安装及环境变量配置"><a href="#JDK安装及环境变量配置" class="headerlink" title="JDK安装及环境变量配置"></a>JDK安装及环境变量配置</h4><ul><li>1、下载jdk   </li></ul><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">jdk-8u144-linux-x64.tar.gz</a>   </p><ul><li>2、解压并赋权限   </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">sudo tar zxvf ./jdk-8u144-linux-x64.tar.gz</span><br><span class="line">sudo chmod -R 777 jdk-8u144-linux-x64</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">如果你下载的是`zip`格式的则使用下面的命令进行解压    </span><br><span class="line">```shell</span><br><span class="line">unzip jdk-8u144-linux-x64.zip</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">* 3、配置环境变量   </span><br><span class="line"></span><br><span class="line">打开配置文件   </span><br><span class="line">```shell</span><br><span class="line">sudo gedit ~/.bashrc</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">在配置文件文本末尾输入环境变量，保存并退出   </span><br><span class="line">```shell</span><br><span class="line">export JAVA_HOME=/home/skylark/Software/jdk1.8.0_144</span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export JAVA_BIN=$JAVA_HOME/bin</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">使环境变量生效   </span><br><span class="line">```shell</span><br><span class="line">source ~/.bashrc</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">验证是否配置成功   </span><br><span class="line">```shell</span><br><span class="line">java -version</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">* 4、设置为ubuntu默认JDK    </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">sudo update-alternatives --config java    #查看根目录的Java，目前只有openJDK</span><br><span class="line">sudo update-alternatives --install /usr/bin/java java /home/skylark/Software/jdk1.8.0_144/bin/java 300#将oracle JDK安装到根目录</span><br><span class="line">sudo update-alternatives --install /usr/bin/javac javac /home/skylark/Software/jdk1.8.0_144/bin/javac 300#将oracle JDK安装到根目录</span><br><span class="line">sudo update-alternatives --config java#再次查看Java配置，输入对应序号，选择oracle JDK作为默认Java</span><br></pre></td></tr></table></figure><h4 id="SDK安装及环境变量配置"><a href="#SDK安装及环境变量配置" class="headerlink" title="SDK安装及环境变量配置"></a>SDK安装及环境变量配置</h4><ul><li>1、下载   </li></ul><p><a href="https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz?utm_source=androiddevtools.cn&amp;utm_medium=website" target="_blank" rel="noopener">android-sdk_r24.4.1-linux</a>   </p><ul><li>2、解压，将解压后的文件夹命名为 <code>android-sdk</code>   </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">sudo tar zxvf ./android-sdk_r24.4.1-linux.tar</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">* 3、配置环境变量   </span><br><span class="line"></span><br><span class="line">打开配置文件   </span><br><span class="line">```shell</span><br><span class="line">sudo gedit ~/.bashrc</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">在配置文件文本末尾输入环境变量，保存并退出   </span><br><span class="line">```shell</span><br><span class="line">export ANDROID_SDK=/home/skylark/Software/android-sdk#VLC编译脚本只认 $ANDROID_SDK 环境变量</span><br><span class="line">export PATH=$PATH:$ANDROID_SDK/tools:$ANDROID_SDK/platform-tools</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">使环境变量生效   </span><br><span class="line">```shell</span><br><span class="line">source ~/.bashrc</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">验证是否配置成功   </span><br><span class="line">```shell</span><br><span class="line">android list target</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### NDK安装及环境变量配置</span><br><span class="line"></span><br><span class="line">* 1、下载   </span><br><span class="line"></span><br><span class="line">[android-ndk-r13b-linux-x86_64](https://dl.google.com/android/repository/android-ndk-r13b-linux-x86_64.zip)</span><br><span class="line"></span><br><span class="line">* 2、解压   </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">unzip android-ndk-r13b-linux-x86_64.zip</span><br></pre></td></tr></table></figure><ul><li>3、配置环境变量   </li></ul><p>打开配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">在配置文件文本末尾输入环境变量，保存并退出   </span><br><span class="line">```shell</span><br><span class="line">export ANDROID_NDK=/home/skylark/Software/android-ndk-r13b #VLC编译脚本只认 $ANDROID_NDK 环境变量</span><br><span class="line">export PATH=$PATH:$ANDROID_NDK</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">使环境变量生效   </span><br><span class="line">```shell</span><br><span class="line">source ~/.bashrc</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">验证是否配置成功   </span><br><span class="line">```shell</span><br><span class="line">ndk-build --version</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### Android Studio安装</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span> 为了解决编译过程中不能下载 `build.gradle` 中的依赖环境问题，建议安装Android-Studio   </span><br><span class="line"><span class="meta">&gt;</span> 如果你可以FQ的话，可以跳过次步骤</span><br><span class="line"></span><br><span class="line">[android-studio-ide-162.3871768-linux.zip](https://developer.android.google.cn/studio/archive.html#android-studio-2-3-1?utm_source=androiddevtools.cn&amp;utm_medium=website)   </span><br><span class="line"></span><br><span class="line">Android Studio的安装比较简单，由于篇幅的原因，这里就不再介绍了，记得安装时的SDK路径和NDK路径选择上面步骤中我们自己的路径。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### 官方推荐工具包安装</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span> 官方给出了一条指令 `sudo apt-get install automake ant autopoint cmake build-essential libtool patch pkg-config protobuf-compiler ragel subversion unzip git` 来安装所需要的包环境，建议自己逐条安装，一步一步来，以便清楚的了解到每个包的安装情况。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>### protobuf3编译及安装</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span> 我所使用的代码，在编译环节要求使用protobuf3，而通过protobuf-compiler安装的是libprotoc2.6.1版本，会出现“Unrecognized syntax identifier “proto3”的错误。因此需要手动下载protobuf3，进行安装。    </span><br><span class="line"><span class="meta">&gt;</span> 这里我采用的是直接下载protobuf-3.0.0的源码，然后进行编译安装   </span><br><span class="line"><span class="meta">&gt;</span> [Google Github Protobuf 安装介绍](https://github.com/google/protobuf/blob/master/src/README.md)</span><br><span class="line"></span><br><span class="line">* 1、下载   </span><br><span class="line"></span><br><span class="line">[protobuf-3.0.0.tar.gz](https://codeload.github.com/google/protobuf/tar.gz/v3.0.0)</span><br><span class="line"></span><br><span class="line">* 2、编译工具准备   </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">sudo apt-get install autoconf automake libtool curl make g++ unzip</span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">* 3、解压   </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">sudo tar zxvf ./protobuf-3.0.0.tar.gz#解压</span><br><span class="line">cd ./protobuf-3.0.0/ #解压出的文件夹</span><br></pre></td></tr></table></figure></p><ul><li>4、下载 <a href="http://download.csdn.net/download/qq_27888241/9951661" target="_blank" rel="noopener">gmock-1.7.0.zip</a>    </li></ul><p>在执行 <code>./autogen.sh</code> 命令时，需要从Q外下载一个 <code>gmock-1.7.0.zip</code> 包，但是，由于网络原因下载失败，所以先提前下载。解压下载的文件，将文件夹重命名为 <code>gmock</code>，并移动到 <code>protobuf-3.0.0</code> 文件夹下。</p><ul><li>5、编译安装    </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd ./protobuf-3.0.0/ #解压出的文件夹</span><br><span class="line">./autogen.sh#首先生成configure脚本</span><br><span class="line">./configure    #运行configure</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig # refresh shared library cache.#千万不要漏掉了 .</span><br><span class="line">./configure --prefix=/usr#更改安装到/usr</span><br></pre></td></tr></table></figure><ul><li>6、验证是否安装成功    </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --version</span><br></pre></td></tr></table></figure><h4 id="VLC环境变量配置"><a href="#VLC环境变量配置" class="headerlink" title="VLC环境变量配置"></a>VLC环境变量配置</h4><blockquote><p>为VLC指定要编译的设备类型，不设置环境变量时，默认采用 <code>armeabi-v7a</code>   </p></blockquote><p>打开配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">在配置文件文本末尾输入环境变量，保存并退出   </span><br><span class="line">```shell</span><br><span class="line">export ANDROID_ABI=armeabi-v7a</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">使环境变量生效   </span><br><span class="line">```shell</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></p><h3 id="编译开始"><a href="#编译开始" class="headerlink" title="编译开始"></a>编译开始</h3><p>经过上面复杂的环境变量配置及编译工具安装，现在我们终于要开始真正的<code>VLC</code>源码编译了</p><h4 id="vlc-andorid源码下载"><a href="#vlc-andorid源码下载" class="headerlink" title="vlc-andorid源码下载"></a>vlc-andorid源码下载</h4><ul><li>克隆vlc-android源码到本地   </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">git clone https://code.videolan.org/videolan/vlc-android.git#使用git命令从VLC官网获取最新vlc-android代码 </span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">* 克隆vlc源码到本地    </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">cd ./vlc-android/</span><br><span class="line">git clone http://git.videolan.org/git/vlc.git vlc#使用git命令从VLC官网获取最新vlc代码</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">* 修改vlc-android目录下的 `build.gradle`    </span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">//将classpath 'com.android.tools.build:gradle:3.4.1'修改为下面的</span><br><span class="line">classpath 'com.android.tools.build:gradle:2.3.3'</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">* 修改vlc-android目录下的 `compile.sh` 将GRADLE标签中的配置修改如下   </span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">read -p "skylark:press any key to start #GRADLE" skylark</span><br><span class="line"></span><br><span class="line">if [ ! -d "gradle/wrapper" ]; then</span><br><span class="line">    GRADLE_VERSION=3.4.1</span><br><span class="line"></span><br><span class="line">    #skylark: if there is no gradle-v-all.zip,then download it.</span><br><span class="line">    if [ ! -a "gradle-$&#123;GRADLE_VERSION&#125;-all.zip" ]; then</span><br><span class="line">    diagnostic "Downloading gradle"</span><br><span class="line">    GRADLE_URL=https://download.videolan.org/pub/contrib/gradle/gradle-$&#123;GRADLE_VERSION&#125;-bin.zip</span><br><span class="line">    wget $&#123;GRADLE_URL&#125; 2&gt;/dev/null || curl -O $&#123;GRADLE_URL&#125;</span><br><span class="line">    checkfail "gradle: download failed"</span><br><span class="line">    else</span><br><span class="line">echo "skylark:#FUNCTIONS find local gradle-$&#123;GRADLE_VERSION&#125;-all.zip"</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    unzip -o gradle-$&#123;GRADLE_VERSION&#125;-bin.zip</span><br><span class="line">    checkfail "gradle: unzip failed"</span><br><span class="line"></span><br><span class="line">    #skylark: change gradle-v-bin.zip downloading url.</span><br><span class="line">    echo "skylark: unzip done. Next step will execute gradle-$&#123;GRADLE_VERSION&#125;/bin/gradle wrapper.This execution will lead to the downloading of [ gradle-$&#123;GRADLE_VERSION&#125;-bin.zip ]. Notice that,you can use a faster download url in gradle-$&#123;GRADLE_VERSION&#125;/gradle/wrapper/gradle-wrapper.properties with the value of [ distributionUrl ] AFTER canceling default downloading process (because gradle-$&#123;GRADLE_VERSION&#125;/bin/gradle will not be created until this execution)."</span><br><span class="line">    echo "Or,you can place your own [ gradle-$&#123;GRADLE_VERSION&#125;-bin.zip ] to the location like /home/skylark/.gradle/wrapper/dists/gradle-3.3-bin/64bhckfm0iuu9gap9hg3r7ev2 , and run compile.sh again(if gradle/wrapper exists,you should remove it first to run this part shell of compile.sh)"</span><br><span class="line">    read -p "Press any key to continue." skylark</span><br><span class="line"></span><br><span class="line">    cd gradle-$&#123;GRADLE_VERSION&#125;</span><br><span class="line"></span><br><span class="line">    ./bin/gradle wrapper</span><br><span class="line">    checkfail "gradle: wrapper failed"</span><br><span class="line"></span><br><span class="line">    ./gradlew -version</span><br><span class="line">    checkfail "gradle: wrapper failed"</span><br><span class="line">    cd ..</span><br><span class="line">    mkdir -p gradle</span><br><span class="line">    mv gradle-$&#123;GRADLE_VERSION&#125;/gradle/wrapper/ gradle</span><br><span class="line">    mv gradle-$&#123;GRADLE_VERSION&#125;/gradlew .</span><br><span class="line">    chmod a+x gradlew</span><br><span class="line">    #skylark : keep this package.</span><br><span class="line">    #rm -rf gradle-$&#123;GRADLE_VERSION&#125;-bin.zip</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo "skylark : #GRADLE done."</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">* 将项目导入到 `Android Studio`    </span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span> 在编译过程中，脚本会去自动下载编译APK所需要的依赖包，但是由于网络原因很难下载下来。   </span><br><span class="line"><span class="meta">&gt;</span> 由于公司内部网络不能FQ，所以没有办法下载。但是，想到每次在使用`Android Studio`时总是可以下载下来的，于是我就将 `vlc-andorid` 项目导入到 `Android Studio` ，虽然同步失败了，显示有许多错误，但是，当再次执行 `compile.sh` 脚本时，竟然破天荒的下载成功了！ </span><br><span class="line"></span><br><span class="line">* 执行 `compile.sh` 脚本，开始编译   </span><br><span class="line"></span><br><span class="line">如果你看到下面的提示，恭喜你成功了！</span><br><span class="line"></span><br><span class="line">![](/assets/images/posts/android/vlc_android.png)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>## 编译完成</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span> 编译成功后的APK在 `/home/skylark/projects/vlc-android/vlc-android/build/outputs/apk/VLC-Android-2.1.16-ARMv7.apk `  </span><br><span class="line"><span class="meta">&gt;</span> 编译成功后的aar包在 `/home/skylark/projects/vlc-android/libvlc/build/outputs/aar/libvlc-3.0.0-null.aar`</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>## 编译出错解决</span><br><span class="line"></span><br><span class="line">* 如果在执行compile.sh脚本时，遇到SDK或NDK环境变量未指定，则修改compile.sh，手动写死环境变量</span><br><span class="line">```shell</span><br><span class="line">ANDROID_SDK=/home/skylark/Software/android-sdk</span><br><span class="line">ANDROID_NDK=/home/skylark/Software/android-ndk-r13b</span><br><span class="line">ANDROID_ABI=armeabi-v7a</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">* 如果在执行compile.sh脚本时，遇到 `compile.sh: line 283: ./compile-libvlc.sh: Permission denied`</span><br><span class="line">，则修改compile.sh    </span><br><span class="line">```shell</span><br><span class="line"><span class="meta">#</span>./compile-libvlc.sh $OPTS</span><br><span class="line">sh compile-libvlc.sh $OPTS</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">* 如果在执行compile.sh脚本时，遇到 `Could not resolve all dependencies for configuration ':classpath'.`</span><br><span class="line">，则修改compile.sh    </span><br><span class="line">```shell</span><br><span class="line"><span class="meta">#</span>classpath 'com.android.tools.build:gradle:3.4.1'</span><br><span class="line">classpath 'com.android.tools.build:gradle:2.3.3'</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是如何在 Ubuntu 16.04 下编译VLC源码的步骤。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://blog.csdn.net/wkw1125/article/details/56845405" target="_blank">从零开始在Linux编译VLC-Android开源项目</a>   </li><li><a href="https://wiki.videolan.org/AndroidCompile/" target="_blank">VLC for Android on Linux </a></li><li><a href="http://blog.csdn.net/u011365633/article/details/74278063" target="_blank">Android使用VLC库开发自己的视频播放器 </a></li><li><a href="https://github.com/google/protobuf/blob/master/src/README.md" target="_blank">Protocol Buffers - Google’s data interchange format </a></li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/08/26/ubuntu-compile-vlc-android/" target="_blank" rel="noopener">从零开始，手把手教你如何在Ubuntu下编译VLC-Android源码</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;公司项目中使用的&lt;code&gt;libvlcjni.so&lt;/code&gt;库文件,有点老，对&lt;code&gt;Android 6.0+&lt;/code&gt;系统兼容性太差了，当程序运行在&lt;code&gt;Android6.0+&lt;/code&gt;系统上时，回弹出警告框，提示&lt;code&gt;libvlcjni.so：text relocations&lt;/code&gt;异常，虽然，程序播放视频没有问题，但是，总是弹出提示框就非常不友好了，为此，就需要重新编译一个新的库文件。&lt;br&gt;由于，在编译中遇到了一大堆难题，足足花了3天时间才将&lt;code&gt;VLC-Android&lt;/code&gt;源码编译成功。期间在网上查找了不少参考资料，但是，大都介绍太过详细，好多地方没有将清楚，非常容易误导他人，所以，决定下一篇详细的教程来记录此次编译的过程，希望能给大家带来帮助。&lt;br&gt;特别感谢 &lt;a href=&quot;http://blog.csdn.net/wkw1125/article/details/56845405&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;从零开始在Linux编译VLC-Android开源项目&lt;/a&gt; 这篇博客给我带来的帮助！&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="VLC" scheme="http://yoursite.com/tags/VLC/"/>
    
      <category term="源码编译" scheme="http://yoursite.com/tags/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>Android 数据库SQLite使用小结</title>
    <link href="http://yoursite.com/2017/08/25/android-sqlite/"/>
    <id>http://yoursite.com/2017/08/25/android-sqlite/</id>
    <published>2017-08-24T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在Android开发过程中，对于数据的存储，我们或多或少的都会使用到数据库相关的操作，所以在此小小的总结一下，Android中使用SQLite数据库的技巧和方法，算是自己对数据库知识的复习。<a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a> </p><a id="more"></a><h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><blockquote><p>adb shell中操作SQLite   </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br><span class="line">su<span class="comment">//以管理员的身份运行命令</span></span><br><span class="line">sqlite DATABASE_NAME.db<span class="comment">//进入要操作的数据库</span></span><br><span class="line">.table<span class="comment">//查看当前数据库有哪些表</span></span><br><span class="line">.table t% <span class="comment">//".tables"命令后也可以跟一参数，它是一个pattern，这样命令就只列出表名和该参数匹配的表。</span></span><br><span class="line">.schema <span class="comment">//显示最初用于创建数据库的CREATE TABLE和CREATE INDEX的SQL语句</span></span><br><span class="line">.schema t% <span class="comment">//".schema"命令可以包含一个参数，它是一个pattern，用于对表进行过滤，这时只会显示满足条件的表和所有索引的SQL语句</span></span><br><span class="line"><span class="function">pragma <span class="title">table_info</span><span class="params">(TABLE_NAME)</span></span>;<span class="comment">//查看表的数据结构</span></span><br><span class="line">.mode line<span class="comment">//切换显示模式，可用参数有 line list column</span></span><br><span class="line">.separator |   <span class="comment">//字段之间使用 | 间隔开</span></span><br><span class="line">.output filename.txt  <span class="comment">//将数据库中的数据输出到文件中</span></span><br><span class="line">.width <span class="number">12</span> <span class="number">6</span> <span class="comment">//调整列宽 12表示第一列宽为12，6表示第二列宽为6</span></span><br><span class="line">.databases <span class="comment">//显示所有当前连接打开的数据库的一个列表,main：最初打开的数据库，temp：临时表的数据库</span></span><br><span class="line">.exit <span class="comment">//退出</span></span><br></pre></td></tr></table></figure><blockquote><p>小技巧   </p></blockquote><ul><li>在<a href="http://www.sqliteexpert.com/download.html" target="_blank" rel="noopener">SQLite EXpert Personal</a> 中注释SQL语句，单行注释使用– ，多行注释使用/**/</li><li>每个 <code>SQLite</code> 数据库中都有一个隐藏的 <code>sqlite_master</code> 表，它记载了当前数据库中所有的建表语句。</li><li>在对数据库进行增删改查前首先需要先调用<code>SQLiteOpenHelper</code>的<code>getReadableDatabase()</code>（查时调用）或<code>getWritableDatabase()</code>（增删改时调用）方法。</li></ul><h4 id="常规的SQL语句操作"><a href="#常规的SQL语句操作" class="headerlink" title="常规的SQL语句操作"></a>常规的SQL语句操作</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//在执行增删改语句时使用</span></span><br><span class="line">db = helper.getWritableDatabase();</span><br><span class="line"><span class="comment">//在执行查询语句时使用</span></span><br><span class="line"><span class="comment">//db = helper.getReadableDatabase();</span></span><br><span class="line">db.execSQL(<span class="string">"在这里填入你的SQL语句"</span>);</span><br><span class="line">```    </span><br><span class="line">&gt; 常用的SQL语句如下:   </span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"><span class="comment">//建表语句</span></span><br><span class="line"><span class="function">create table <span class="keyword">if</span> not exists <span class="title">TABLE_NAME</span><span class="params">(Id integer orimary key,Name text,Age integer)</span></span>;</span><br><span class="line"><span class="comment">//增加一条数据</span></span><br><span class="line"><span class="function">insert into <span class="title">TABLE_NAME</span><span class="params">(Id,Name,Age)</span> <span class="title">values</span> <span class="params">(<span class="number">1</span>,<span class="string">'lixuelong'</span>,<span class="number">23</span>)</span></span>;</span><br><span class="line"><span class="comment">//删除一条数据</span></span><br><span class="line">delete from TABLE_NAME where Name = <span class="string">'lixuelong'</span>;</span><br><span class="line"><span class="comment">//修改一条数据</span></span><br><span class="line">update TABLE_NAME set Name = <span class="string">'xuelong'</span> where Id =<span class="number">1</span>;</span><br><span class="line"><span class="comment">//查询语句</span></span><br><span class="line">select * from TABLE_NAME where Name = <span class="string">'lixuelong'</span> order by Age desc;</span><br><span class="line"><span class="comment">//统计查询语句</span></span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(Id)</span> from TABLE_NAME where Age </span>= <span class="number">18</span>;</span><br><span class="line"><span class="comment">//比较查询语句</span></span><br><span class="line">select Id,Name,Max(Age) as Age from TABLE_NAME;</span><br></pre></td></tr></table></figure><h4 id="Android自有的事务（Transaction）处理方法"><a href="#Android自有的事务（Transaction）处理方法" class="headerlink" title="Android自有的事务（Transaction）处理方法"></a>Android自有的事务（<code>Transaction</code>）处理方法</h4><blockquote><p>增加数据操作<br>long insertOrThrow(String table, String nullColumnHack, ContentValues values)<br>无论第三个参数是否包含数据，执行此方法必定会插入一条数据   </p></blockquote><ul><li>table：表名</li><li>nullColumnHack：用于指定空值字段的名称</li><li>values：要存放的ContentValues对象，可以为null</li><li>返回值：返回新添记录的行号，与主键id无关,发生错误返回-1</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">db = helper.getWritableDatabase();</span><br><span class="line">db.beginTransaction();</span><br><span class="line"><span class="comment">// insert into TABLE_NAME (_id,Name,Age) values (6,'张三',18);</span></span><br><span class="line">ContentValues contentValues = <span class="keyword">new</span> ContentValues();</span><br><span class="line">contentValues.put(<span class="string">"_id"</span>,<span class="string">"6"</span>);</span><br><span class="line">contentValues.put(<span class="string">"Name"</span>, <span class="string">"张三"</span>);</span><br><span class="line">contentValues.put(<span class="string">"Age"</span>, <span class="number">18</span>);</span><br><span class="line">db.insertOrThrow(TABLE_NAME, <span class="keyword">null</span>, contentValues);</span><br><span class="line">db.setTransactionSuccessful();</span><br></pre></td></tr></table></figure><blockquote><p>删除数据操作<br>int delete(String table, String whereClause, String[] whereArgs)   </p></blockquote><ul><li>table：表名</li><li>whereClause：删除的条件，如果为null，则整行删除</li><li>whereArgs：字符串数组，和whereClause配合使用，有两种使用方法，1、如果whereClause的条件已经直接给出，如”Name=’张三’”，则whereArgs可以设为null。2、如果whereClause的条件没有直接给出，如”Name=?”，则？会被whereArgs字符串数组中的值代替。   </li><li>返回值：0：删除是被，1：删除成功</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">db = helper.getWritableDatabase();</span><br><span class="line">db.beginTransaction();</span><br><span class="line">db.delete(TABLE_NAME, <span class="string">"Name=?"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"张三"</span>&#125;);</span><br><span class="line"><span class="comment">//db.execSQL("delete from TABLE_NAME where Name = '张三';");</span></span><br><span class="line">db.setTransactionSuccessful();</span><br></pre></td></tr></table></figure><blockquote><p>修改数据操作<br>update(String table, ContentValues values, String whereClause, String[] whereArgs)</p></blockquote><ul><li>table：表名</li><li>values：要存放的ContentValues对象，可以为null</li><li>whereClause：修改的条件，如果为null，则整行修改</li><li>whereArgs：字符串数组，和whereClause配合使用，有两种使用方法，1、如果whereClause的条件已经直接给出，如”Name=’张三’”，则whereArgs可以设为null。2、如果whereClause的条件没有直接给出，如”Name=?”，则？会被whereArgs字符串数组中的值代替。</li><li>返回值：the number of rows affected</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">db = helper.getWritableDatabase();</span><br><span class="line">db.beginTransaction();</span><br><span class="line"><span class="comment">// update TABLE_NAME set Name = 'zhangsan' where Name = '张三'</span></span><br><span class="line">ContentValues contentValues = <span class="keyword">new</span> ContentValues();</span><br><span class="line">contentValues.put(<span class="string">"Name"</span>, <span class="string">"zhangsan"</span>);</span><br><span class="line">db.update(TABLE_NAME, contentValues, <span class="string">"Name = ?"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"张三"</span>&#125;);</span><br><span class="line">db.setTransactionSuccessful();</span><br></pre></td></tr></table></figure><blockquote><p>查询数据操作<br>query(String table, String[] columns, String selection, String[] selectionArgs, String groupBy, String having, String orderBy)<br>query方法较多，这里只列举一个，有兴趣的朋友可以自行研究</p></blockquote><ul><li>table：表名</li><li>columns：需要返回的列的列表，如果为null，则返回全部的列</li><li>selection：查询的条件，符合什么条件的行将返回。如果为null，则这个表里的所有行都将返回。其两种用法和update里的一样</li><li>selectionArgs：用法和update里的一样</li><li>groupBy：用于控制分组</li><li>having：用于对分组进行过滤</li><li>orderBy：用于对记录进行排序</li><li>返回值：Cursor对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">db = helper.getWritableDatabase();</span><br><span class="line"><span class="comment">// select * from TABLE_NAME where Age = 18</span></span><br><span class="line">cursor = db.query(TABLE_NAME, TABLE_COLUMNS, <span class="string">"Age = ?"</span>, <span class="keyword">new</span> String[]&#123;String.valueOf(<span class="number">18</span>)&#125;,<span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">   List&lt;DBSQLBean&gt; beanList = <span class="keyword">new</span> ArrayList&lt;DBSQLBean&gt;();</span><br><span class="line">   <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">        DBSQLBean bean = parseBean(cursor);</span><br><span class="line">        beanList.add(bean);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> beanList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>统计查询数据操作   </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">db = helper.getWritableDatabase();</span><br><span class="line"><span class="comment">// select count(_id) from TABLE_NAME where Age = 18</span></span><br><span class="line">cursor = db.query(DBSQLHelper.TABLE_NAME, <span class="keyword">new</span> String[]&#123;<span class="string">"COUNT(_id)"</span>&#125;,<span class="string">"Age = ?"</span>, <span class="keyword">new</span> String[]&#123;String.valueOf(<span class="number">18</span>)&#125;,<span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor.moveToFirst()) &#123;</span><br><span class="line">    count = cursor.getInt(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>比较查询数据操作   </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">db = helper.getWritableDatabase();</span><br><span class="line"><span class="comment">// select _id,Name,Max(Age) as Age from TABLE_NAME</span></span><br><span class="line">cursor = db.query(DBSQLHelper.TABLE_NAME, <span class="keyword">new</span> String[]&#123;<span class="string">"_id"</span>, <span class="string">"Name"</span>,<span class="string">"Max(Age) as Age"</span>&#125;,<span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">if</span> (cursor.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (cursor.moveToFirst()) &#123;</span><br><span class="line">        <span class="keyword">return</span> parseBean(cursor);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是对Android中数据库操作的小小总结。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。   </p><p><a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a> </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://www.jianshu.com/p/5c33be6ce89d" target="_blank">Android SQLite详解</a>   </li><li><a href="http://blog.csdn.net/tanjunjie621/article/details/6775912" target="_blank">android笔记 SQLiteDatabase的几个重要方法的参数列表 </a></li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/08/25/android-sqlite/" target="_blank" rel="noopener">Android 数据库SQLite使用小结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在Android开发过程中，对于数据的存储，我们或多或少的都会使用到数据库相关的操作，所以在此小小的总结一下，Android中使用SQLite数据库的技巧和方法，算是自己对数据库知识的复习。&lt;a href=&quot;https://github.com/skylarklxlong/SkylarkDemo&quot; target=&quot;_blank&quot;&gt;项目源代码&lt;/a&gt; &lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="sqlite" scheme="http://yoursite.com/tags/sqlite/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio代码混淆-第三方jar混淆汇总（持续更新）</title>
    <link href="http://yoursite.com/2017/08/15/android-androidstudio-proguard-third-party-jar/"/>
    <id>http://yoursite.com/2017/08/15/android-androidstudio-proguard-third-party-jar/</id>
    <published>2017-08-14T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Android有非常多的优秀的第三方开源jar包，我们经常在我们的项目中使用了不少jar包，但是往往到了release的时候就忘了混淆第三方jar包了，会给我们开发带来不少麻烦，所有在这里汇总一下一些比较热门的第三方jar包的混淆方式，方便大家开发。本篇文章会持续更新，如果你有其它jar包的混淆使用方式也可以告知我，以便可以更好的为大家提供一份较为完整实例。<br>​<br><a id="more"></a></p><h3 id="常用第三方开源jar包"><a href="#常用第三方开源jar包" class="headerlink" title="常用第三方开源jar包"></a>常用第三方开源jar包</h3><blockquote><p>排名不分先后（按首字母顺序排列）</p></blockquote><p><strong>Android-gif-drawable</strong> <a href="https://github.com/koral--/android-gif-drawable" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">pl</span>.<span class="title">droidsonroids</span>.<span class="title">gif</span>.<span class="title">GifIOException</span></span>&#123;&lt;init&gt;(<span class="keyword">int</span>);&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">pl</span>.<span class="title">droidsonroids</span>.<span class="title">gif</span>.<span class="title">GifInfoHandle</span></span>&#123;&lt;init&gt;(<span class="keyword">long</span>,<span class="keyword">int</span>,<span class="keyword">int</span>,<span class="keyword">int</span>);&#125;</span><br></pre></td></tr></table></figure><p><strong>Android-Universal-Image-Loader</strong> <a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#Universal Image Loader</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">nostra13</span>.<span class="title">universalimageloader</span>.** </span>&#123; *; &#125;</span><br><span class="line">-keepattributes Signature</span><br></pre></td></tr></table></figure><p><strong>ButterKnife</strong> <a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">butterknife</span>.** </span>&#123; *; &#125;</span><br><span class="line">-dontwarn butterknife.internal.**</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> **$$<span class="title">ViewBinder</span> </span>&#123; *; &#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> **$$<span class="title">ViewInjector</span></span></span><br><span class="line"><span class="class">-<span class="title">keepclasseswithmembernames</span> <span class="title">class</span> * </span>&#123;    </span><br><span class="line">   <span class="meta">@butterknife</span>.* &lt;fields&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembernames <span class="class"><span class="keyword">class</span> * </span>&#123;    </span><br><span class="line">   <span class="meta">@butterknife</span>.* &lt;methods&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Bugly</strong> <a href="http://bugly.qq.com/" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">tencent</span>.<span class="title">bugly</span>.**</span>&#123;*;&#125;</span><br></pre></td></tr></table></figure><p><strong>EventBus</strong> <a href="https://github.com/greenrobot/EventBus" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-keepclassmembers <span class="class"><span class="keyword">class</span> ** </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onEvent*(***);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Only required if you use AsyncExecutor</span><br><span class="line">-keepclassmembers <span class="class"><span class="keyword">class</span> * <span class="keyword">extends</span> <span class="title">de</span>.<span class="title">greenrobot</span>.<span class="title">event</span>.<span class="title">util</span>.<span class="title">ThrowableFailureEvent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> &lt;init&gt;(java.lang.Throwable);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Don't warn for missing support classes</span><br><span class="line">-dontwarn de.greenrobot.event.util.*$Support</span><br><span class="line">-dontwarn de.greenrobot.event.util.*$SupportManagerFragment</span><br></pre></td></tr></table></figure><p><strong>Fabric Twitter Kit</strong> <a href="https://dev.twitter.com/twitter-kit/android/integrate" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-dontwarn com.squareup.okhttp.**</span><br><span class="line">-dontwarn com.google.appengine.api.urlfetch.**</span><br><span class="line">-dontwarn rx.**</span><br><span class="line">-dontwarn retrofit.**</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">squareup</span>.<span class="title">okhttp</span>.** </span>&#123; *; &#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">interface</span> <span class="title">com</span>.<span class="title">squareup</span>.<span class="title">okhttp</span>.** </span>&#123; *; &#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">retrofit</span>.** </span>&#123; *; &#125;</span><br><span class="line">-keepclasseswithmembers <span class="class"><span class="keyword">class</span> * </span>&#123;</span><br><span class="line">    <span class="meta">@retrofit</span>.http.* *;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Fastjson</strong> <a href="https://github.com/alibaba/fastjson" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-dontwarn com.alibaba.fastjson.**</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keepattributes *Annotation*</span><br></pre></td></tr></table></figure><p><strong>Glide</strong> <a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> * <span class="keyword">implements</span> <span class="title">com</span>.<span class="title">bumptech</span>.<span class="title">glide</span>.<span class="title">module</span>.<span class="title">GlideModule</span></span></span><br><span class="line"><span class="class">-<span class="title">keep</span> <span class="title">public</span> <span class="title">class</span> * <span class="keyword">extends</span> <span class="title">com</span>.<span class="title">bumptech</span>.<span class="title">glide</span>.<span class="title">AppGlideModule</span></span></span><br><span class="line"><span class="class">-<span class="title">keep</span> <span class="title">public</span> <span class="title">enum</span> <span class="title">com</span>.<span class="title">bumptech</span>.<span class="title">glide</span>.<span class="title">load</span>.<span class="title">resource</span>.<span class="title">bitmap</span>.<span class="title">ImageHeaderParser</span>$** </span>&#123;</span><br><span class="line">  **[] $VALUES;</span><br><span class="line">  <span class="keyword">public</span> *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># for DexGuard only</span><br><span class="line">-keepresourcexmlelements manifest/application/meta-data<span class="meta">@value</span>=GlideModule</span><br></pre></td></tr></table></figure><p><strong>Gson</strong> <a href="https://github.com/google/gson/" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># Gson uses generic type information stored in a class file when working with fields. Proguard</span><br><span class="line"># removes such information by default, so configure it to keep all of it.</span><br><span class="line">-keepattributes Signature</span><br><span class="line"></span><br><span class="line"># For using GSON @Expose annotation</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line"></span><br><span class="line"># Gson specific classes</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">sun</span>.<span class="title">misc</span>.<span class="title">Unsafe</span> </span>&#123; *; &#125;</span><br><span class="line">#-keep class com.google.gson.stream.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line"># Application classes that will be serialized/deserialized over Gson</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">google</span>.<span class="title">gson</span>.<span class="title">examples</span>.<span class="title">android</span>.<span class="title">model</span>.** </span>&#123; *; &#125;</span><br><span class="line"></span><br><span class="line"># Prevent proguard from stripping interface information from TypeAdapterFactory,</span><br><span class="line"># JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> * <span class="keyword">implements</span> <span class="title">com</span>.<span class="title">google</span>.<span class="title">gson</span>.<span class="title">TypeAdapterFactory</span></span></span><br><span class="line"><span class="class">-<span class="title">keep</span> <span class="title">class</span> * <span class="keyword">implements</span> <span class="title">com</span>.<span class="title">google</span>.<span class="title">gson</span>.<span class="title">JsonSerializer</span></span></span><br><span class="line"><span class="class">-<span class="title">keep</span> <span class="title">class</span> * <span class="keyword">implements</span> <span class="title">com</span>.<span class="title">google</span>.<span class="title">gson</span>.<span class="title">JsonDeserializer</span></span></span><br></pre></td></tr></table></figure><p><strong>环信SDK</strong> <a href="http://docs.easemob.com/im/start" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">easemob</span>.** </span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">jivesoftware</span>.** </span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">apache</span>.** </span>&#123;*;&#125;</span><br><span class="line">-dontwarn  com.easemob.**</span><br><span class="line">#2.0.9后的不需要加下面这个keep</span><br><span class="line">#-keep class org.xbill.DNS.** &#123;*;&#125;</span><br><span class="line">#另外，demo中发送表情的时候使用到反射，需要keep SmileUtils</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">easemob</span>.<span class="title">chatuidemo</span>.<span class="title">utils</span>.<span class="title">SmileUtils</span> </span>&#123;*;&#125;</span><br><span class="line">#注意前面的包名，如果把这个类复制到自己的项目底下，比如放在com.example.utils底下，应该这么写(实际要去掉#)</span><br><span class="line">#-keep class com.example.utils.SmileUtils &#123;*;&#125;</span><br><span class="line">#如果使用easeui库，需要这么写</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">easemob</span>.<span class="title">easeui</span>.<span class="title">utils</span>.<span class="title">EaseSmileUtils</span> </span>&#123;*;&#125;</span><br><span class="line">#2.0.9后加入语音通话功能，如需使用此功能的api，加入以下keep</span><br><span class="line">-dontwarn ch.imvs.**</span><br><span class="line">-dontwarn org.slf4j.**</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">ice4j</span>.** </span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">net</span>.<span class="title">java</span>.<span class="title">sip</span>.** </span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">webrtc</span>.<span class="title">voiceengine</span>.** </span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">bitlet</span>.** </span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">slf4j</span>.** </span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">ch</span>.<span class="title">imvs</span>.** </span>&#123;*;&#125;</span><br></pre></td></tr></table></figure><p><strong>LitePal</strong> <a href="https://github.com/LitePalFramework/LitePal" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">litepal</span>.** </span>&#123;</span><br><span class="line">    *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> * <span class="keyword">extends</span> <span class="title">org</span>.<span class="title">litepal</span>.<span class="title">crud</span>.<span class="title">DataSupport</span> </span>&#123;</span><br><span class="line">    *;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Okhttp</strong> <a href="http://square.github.io/okhttp/" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-keepattributes Signature</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">okhttp3</span>.** </span>&#123; *; &#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">interface</span> <span class="title">okhttp3</span>.** </span>&#123; *; &#125;</span><br><span class="line">-dontwarn okhttp3.**</span><br></pre></td></tr></table></figure><p><strong>OkhttpUtils</strong> <a href="https://github.com/hongyangAndroid/okhttputils" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#okhttputils</span><br><span class="line">-dontwarn com.zhy.http.**</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">zhy</span>.<span class="title">http</span>.**</span>&#123;*;&#125;</span><br><span class="line"></span><br><span class="line">#okhttp</span><br><span class="line">-dontwarn okhttp3.**</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">okhttp3</span>.**</span>&#123;*;&#125;</span><br><span class="line"></span><br><span class="line">#okio</span><br><span class="line">-dontwarn okio.**</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">okio</span>.**</span>&#123;*;&#125;</span><br></pre></td></tr></table></figure><p><strong>Picasso</strong> <a href="https://square.github.io/picasso/" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-dontwarn com.squareup.okhttp.**</span><br></pre></td></tr></table></figure><p><strong>Retrofit2</strong> <a href="https://square.github.io/retrofit/" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-dontwarn retrofit2.**</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">retrofit2</span>.** </span>&#123; *; &#125;</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keepattributes Exceptions</span><br><span class="line"></span><br><span class="line">-keepclasseswithmembers <span class="class"><span class="keyword">class</span> * </span>&#123;</span><br><span class="line">    <span class="meta">@retrofit</span>2.http.* &lt;methods&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>RxJava</strong> <a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">rx</span>.<span class="title">schedulers</span>.<span class="title">Schedulers</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">rx</span>.<span class="title">schedulers</span>.<span class="title">ImmediateScheduler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">rx</span>.<span class="title">schedulers</span>.<span class="title">TestScheduler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">rx</span>.<span class="title">schedulers</span>.<span class="title">Schedulers</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ** test();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ShareSDK</strong> <a href="http://wiki.mob.com/android-sharesdk%E5%AE%8C%E6%95%B4%E7%9A%84%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3/" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">cn</span>.<span class="title">sharesdk</span>.**</span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">sina</span>.**</span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> **.<span class="title">R</span>$* </span>&#123;*;&#125;</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> **.<span class="title">R</span></span>&#123;*;&#125;</span><br><span class="line">-dontwarn cn.sharesdk.**</span><br><span class="line">-dontwarn **.R$*</span><br><span class="line">-dontwarn com.tencent.**</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">tencent</span>.** </span>&#123;*;&#125;</span><br></pre></td></tr></table></figure><p><strong>SlidingMenu</strong> <a href="https://github.com/jfeinstein10/SlidingMenu" target="_blank" rel="noopener">链接</a>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-dontwarn com.jeremyfeinstein.slidingmenu.lib.**</span><br><span class="line">-keep <span class="class"><span class="keyword">class</span> <span class="title">com</span>.<span class="title">jeremyfeinstein</span>.<span class="title">slidingmenu</span>.<span class="title">lib</span>.**</span>&#123;*;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>补充几个非常不错的代码混淆相关的开源项目   </p></blockquote><p><strong>AndResGuard</strong> <a href="https://github.com/shwenzhang/AndResGuard" target="_blank" rel="noopener">链接</a>   </p><blockquote><p> Android 源混淆</p></blockquote><p><strong>android-proguard-snippets</strong> <a href="https://github.com/krschultz/android-proguard-snippets" target="_blank" rel="noopener">链接</a>   </p><blockquote><p> 一个更棒的项目，几乎整合了所有常见的第三方jar包的混淆方式。</p></blockquote><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上就是目前所整理的第三方开源jar包的代码混淆方式，如果你有其他的jar包的使用方式可以给我留言，我会添加上去。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://www.jianshu.com/p/155430a27f00" target="_blank">Android混淆配置总结-持续更新</a>   </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/08/15/android-androidstudio-proguard-third-party-jar/" target="_blank" rel="noopener">Android Studio代码混淆-第三方jar混淆汇总（持续更新）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Android有非常多的优秀的第三方开源jar包，我们经常在我们的项目中使用了不少jar包，但是往往到了release的时候就忘了混淆第三方jar包了，会给我们开发带来不少麻烦，所有在这里汇总一下一些比较热门的第三方jar包的混淆方式，方便大家开发。本篇文章会持续更新，如果你有其它jar包的混淆使用方式也可以告知我，以便可以更好的为大家提供一份较为完整实例。&lt;br&gt;​&lt;br&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
      <category term="代码混淆" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio代码混淆</title>
    <link href="http://yoursite.com/2017/08/14/android-androidstudio-proguard/"/>
    <id>http://yoursite.com/2017/08/14/android-androidstudio-proguard/</id>
    <published>2017-08-13T16:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.728Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近两天研究了一下，如何在Android Studio中配置代码混淆，代码混淆不仅仅可以保护我们的代码，他还有精简编译后程序大小的作用，下面就详细讲解一下，该如何给我们的项目配置代码混淆。  <a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>   </p><a id="more"></a><h3 id="build-gradle中的配置"><a href="#build-gradle中的配置" class="headerlink" title="build.gradle中的配置"></a>build.gradle中的配置</h3><blockquote><p>首先需要在 <code>Module</code> 的 <code>build.gradle</code> 中将 <code>minifyEnabled</code> 的属性值改为 <code>true</code> ，这里的 <code>minifyEnable</code> 就是是否需要混淆的意思，它的默认值是 <code>false</code> ,其中 <code>proguard-Android.txt</code> 文件是本地 <code>sdk/tools/proguard</code> 文件夹下的默认文件, <code>prguard-rules.pro</code> 文件就是用来编写混淆代码的。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">true</span></span><br><span class="line">            <span class="function">proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</span></span><br><span class="line"><span class="function">        &#125;</span></span><br><span class="line"><span class="function">    &#125;</span></span><br></pre></td></tr></table></figure><h3 id="编写自己的混淆规则"><a href="#编写自己的混淆规则" class="headerlink" title="编写自己的混淆规则"></a>编写自己的混淆规则</h3><blockquote><p>就是修改proguard-rules.pro文件，在其中书写自己的混淆规则。下面直接放上我的配置文件。</p></blockquote><pre><code class="xml"># 在prguard-rules.pro文件中写的，其实就是混淆规则，规定哪些东西不需要混淆。#自己编写的代码中大致就是一些重要的类需要混淆，而混淆的本质就是精简类名，用简单的a,b,c等单词来代替之前写的如DataUtil等易懂的类名。#所以，理解了这点，也就好理解这个混淆文件该怎么写了，大致思路就是：#不混淆第三方库，不混淆系统组件，一般也可以不混淆Bean等模型类，因为这些对别人都是没用的，毕竟都是开源的。。。#混淆配置设定-optimizationpasses 5 #指定代码压缩级别-dontusemixedcaseclassnames #混淆时不会产生形形色色的类名-dontskipnonpubliclibraryclasses #指定不忽略非公共类库-dontpreverify #不预校验，如果需要预校验，是-dontoptimize-ignorewarnings #屏蔽警告-verbose #混淆时记录日志-optimizations !code/simplification/arithmetic,!field/*,!class/merging/* #优化#-不需要混淆第三方类库-dontwarn android.support.v4.** #去掉警告-keep class android.support.v4.** { *; } #过滤android.support.v4-keep interface android.support.v4.app.** { *; }-keep public class * extends android.support.v4.**-keep public class * extends android.app.Fragment-keep class org.apache.**{*;} #过滤commons-httpclient-3.1.jar-keep class com.fasterxml.jackson.**{*;} #过滤jackson-core-2.1.4.jar等-dontwarn com.lidroid.xutils.** #去掉警告-keep class com.lidroid.xutils.**{*;} #过滤xUtils-2.6.14.jar-keep class * extends java.lang.annotation.Annotation{*;} #这是xUtils文档中提到的过滤掉注解-dontwarn com.baidu.** #去掉警告-dontwarn com.baidu.mapapi.**-keep class com.baidu.** {*;} #过滤BaiduLBS_Android.jar-keep class vi.com.gdi.bgl.android.**{*;}-keep class com.baidu.platform.**{*;}-keep class com.baidu.location.**{*;}-keep class com.baidu.vi.**{*;}# 去掉与 MPAndroidChart jar包相关的-dontnote com.github.mikephil.charting.**-keep class com.github.mikephil.charting.** {*;}# 去掉与 leakcanary jar包相关的-dontnote com.squareup.leakcanary.**-keep class com.squareup.leakcanary.** {*;}# 去掉与 Ksoap2 jar包相关的-dontnote org.ksoap2.**-dontnote org.kobjects.**-dontnote org.kxml2.**-dontnote org.xmlpull.v1.**-keep class org.kobjects.** {*;}-keep class org.ksoap2.** {*;}-keep class org.kxml2.** {*;}-keep class org.xmlpull.v1.** {*;}# 去掉与 SlideAndDragListView jar包相关的-dontnote com.yydcdut.sdlv.**-keep class com.yydcdut.sdlv.** {*;}# 去掉与 pulltorefresh jar包相关的-dontnote com.handmark.pulltorefresh.**-keep class com.handmark.pulltorefresh.** {*;}# 去掉与 de.greenrobot.dao jar包相关的-dontnote de.greenrobot.dao.**-keep class de.greenrobot.dao.** {*;}# 去掉与 de.greenrobot.daogenerator jar包相关的-dontnote de.greenrobot.daogenerator.**-keep class de.greenrobot.daogenerator.** {*;}# 去掉与 gson jar包相关的# removes such information by default, so configure it to keep all of it.-keepattributes Signature# Gson specific classes-keep class sun.misc.Unsafe { *; }-keep class com.google.gson.stream.** { *; }# Application classes that will be serialized/deserialized over Gson-keep class com.google.gson.examples.android.model.** { *; }-keep class com.google.gson.** { *;}#这句非常重要，主要是滤掉 com.demo.demo.bean包下的所有.class文件不进行混淆编译,com.demo.demo是你的包名-keep class com.demo.demo.bean.** {*;}# 去掉与 butterknife jar包相关的-keep class butterknife.** { *; }-dontwarn butterknife.internal.**-keep class **$$ViewBinder { *; }-keep class **$$ViewInjector {*;} #就是这里没有添加，导致我的整个程序出错（因为我在程序中使用的是InjectView而不是BindView）-keepclasseswithmembernames class * {    @butterknife.* <span class="tag">&lt;<span class="name">fields</span>&gt;</span>;}-keepclasseswithmembernames class * {    @butterknife.* <span class="tag">&lt;<span class="name">methods</span>&gt;</span>;}#不需要混淆系统组件等-keep public class * extends android.app.Activity-keep public class * extends android.app.Application-keep public class * extends android.app.Service-keep public class * extends android.content.BroadcastReceiver-keep public class * extends android.content.ContentProvider-keep public class * extends android.preference.Preference-keep public class com.android.vending.licensing.ILicensingService#保护指定的类和类的成员，但条件是所有指定的类和类成员是要存在-keepclasseswithmembernames class * {    public <span class="tag">&lt;<span class="name">init</span>&gt;</span>(android.content.Context, android.util.AttributeSet);}-keepclasseswithmembernames class * {    public <span class="tag">&lt;<span class="name">init</span>&gt;</span>(android.content.Context, android.util.AttributeSet, int);}-keepclassmembers class * extends android.support.v7.app.AppCompatActivity {public void *(android.view.View);}#-自己编写的类的操作-keep class com.skylark.model.**{*;} #过滤掉自己编写的实体类                               #过滤掉自己编写的实体类# 过滤R文件的混淆：-keep class **.R$* {*;}</code></pre><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>代码混淆关键部分就是在自己使用的第三方jar包上，这个就要看看你使用的第三方jar包的相关说明了。一般在说明中都会说明该如何操作的。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://blog.csdn.net/z157794218/article/details/40039785" target="_blank">代码混淆详解</a>   </li><li><a href="http://blog.csdn.net/ttccaaa/article/details/47687241" target="_blank">AndroidStudio中代码混淆以及打包操作</a> </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/08/14/android-androidstudio-proguard/" target="_blank" rel="noopener">Android Studio代码混淆</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近两天研究了一下，如何在Android Studio中配置代码混淆，代码混淆不仅仅可以保护我们的代码，他还有精简编译后程序大小的作用，下面就详细讲解一下，该如何给我们的项目配置代码混淆。  &lt;a href=&quot;https://github.com/skylarklxlong/SkylarkDemo&quot; target=&quot;_blank&quot;&gt;项目源代码&lt;/a&gt;   &lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
      <category term="代码混淆" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86/"/>
    
  </entry>
  
  <entry>
    <title>Android搜索实时显示功能实现</title>
    <link href="http://yoursite.com/2017/08/10/android-local-search-sql/"/>
    <id>http://yoursite.com/2017/08/10/android-local-search-sql/</id>
    <published>2017-08-10T04:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>作为一名Android开发小白，应该时刻督促自己不断的学习技术，最近遇到了一个和搜索有关的问题，就学习找时间学习了一下，<strong>如何实现简单Android的搜索功能并可以实时预览搜索结果</strong>，整体思路应该和平常我们见到的搜索功能差不多，所以可以直接将我的这个嵌套到你的项目中使用。 <a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>   </p><p>先来看看效果图吧！<br><img src="/assets/images/posts/android/local_search.gif" alt></p><a id="more"></a><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><blockquote><p>首先搜索纪录应该有两种情况：<br>1、用户直接输入的信息这个毫无疑问肯定是搜索纪录。<br>2、用户输入完成后并没有点击搜索按钮而是直接点击了搜索结果，那么搜索结果应该也是搜索纪录。</p></blockquote><p><strong>思路：</strong></p><ul><li>刚进入搜索界面时，查询搜索纪录数据库，看是否有搜索纪录，有则显示搜索纪录，无则不显示。</li><li>当用户在搜索框中输入关键字字时，下方<code>listview</code>实时显示数据库中<code>模糊查询</code>的结果。</li></ul><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><ul><li>1、初始化本地数据库</li><li>2、尝试从保存查询纪录的数据库中获取历史纪录并显示</li><li>3、使用TextWatcher实现对实时搜索</li><li>4、搜索及保存搜索纪录</li><li>5、listview的点击 做你自己的业务逻辑 </li></ul><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><blockquote><p><code>数据库的增删改查</code>、<code>ScrollView中嵌套ListView</code>、<code>EditText的TextWatcher</code>、<code>软键盘隐藏</code></p></blockquote><p><strong>以下是代码实现：</strong></p><h4 id="RecordsSqliteHelper实现（用来操作历史纪录的）"><a href="#RecordsSqliteHelper实现（用来操作历史纪录的）" class="headerlink" title="RecordsSqliteHelper实现（用来操作历史纪录的）"></a>RecordsSqliteHelper实现（用来操作历史纪录的）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecordsSqliteHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String CREATE_RECORDS_TABLE = <span class="string">"create table table_records(_id integer primary key autoincrement,username varchar(200),password varchar(200))"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RecordsSqliteHelper</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, <span class="string">"records_db"</span>, <span class="keyword">null</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase sqLiteDatabase)</span> </span>&#123;</span><br><span class="line">        sqLiteDatabase.execSQL(CREATE_RECORDS_TABLE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase sqLiteDatabase, <span class="keyword">int</span> i, <span class="keyword">int</span> i1)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">#### SearchSqliteHelper实现（用来操作搜索查询的）   </span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchSqliteHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String CREATE_TABLE = <span class="string">"create table table_search(_id integer primary key autoincrement,username varchar(200),password varchar(200))"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SearchSqliteHelper</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, <span class="string">"search_db"</span>, <span class="keyword">null</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase sqLiteDatabase)</span> </span>&#123;</span><br><span class="line">        sqLiteDatabase.execSQL(CREATE_TABLE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase sqLiteDatabase, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ListViewForScrollView（一个可以兼容ScrollView的ListView）"><a href="#ListViewForScrollView（一个可以兼容ScrollView的ListView）" class="headerlink" title="ListViewForScrollView（一个可以兼容ScrollView的ListView）"></a>ListViewForScrollView（一个可以兼容ScrollView的ListView）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListViewForScrollView</span> <span class="keyword">extends</span> <span class="title">ListView</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListViewForScrollView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListViewForScrollView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListViewForScrollView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 2017/8/9 只需要重写这一个方法就可以了，重写后可以使ListView在ScrollView中展开</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入一个固定值expandSpec来绘制ListView的高。</span></span><br><span class="line"><span class="comment">     * http://blog.csdn.net/liaoinstan/article/details/50509122</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> widthMeasureSpec</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> heightMeasureSpec</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> expandSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE &gt;&gt; <span class="number">2</span>, MeasureSpec.AT_MOST);</span><br><span class="line"><span class="comment">//        super.onMeasure(widthMeasureSpec, heightMeasureSpec);</span></span><br><span class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, expandSpec);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="activity-main（主布局）"><a href="#activity-main（主布局）" class="headerlink" title="activity_main（主布局）"></a>activity_main（主布局）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/edit_search"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@null"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:drawableLeft</span>=<span class="string">"@android:drawable/ic_menu_search"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:drawablePadding</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"请输入关键词查询！"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:imeOptions</span>=<span class="string">"actionSearch"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:singleLine</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_search"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"搜索"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"20sp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:paddingLeft</span>=<span class="string">"20dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/tv_tip"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:gravity</span>=<span class="string">"left|center_vertical"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:text</span>=<span class="string">"搜索历史"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">com.skylark.localsearchdemo.views.ListViewForScrollView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/listView"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_clear"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"40dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"#F6F6F6"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">"清除搜索历史"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="MainActivity（主方法实现）"><a href="#MainActivity（主方法实现）" class="headerlink" title="MainActivity（主方法实现）"></a>MainActivity（主方法实现）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    EditText mEditSearch;</span><br><span class="line">    TextView mTvSearch;</span><br><span class="line">    TextView mTvTip;</span><br><span class="line">    ListViewForScrollView mListView;</span><br><span class="line">    TextView mTvClear;</span><br><span class="line"></span><br><span class="line">    SimpleCursorAdapter adapter;</span><br><span class="line"></span><br><span class="line">    SearchSqliteHelper searchSqliteHelper;</span><br><span class="line">    RecordsSqliteHelper recordsSqliteHelper;</span><br><span class="line">    SQLiteDatabase db_search;</span><br><span class="line">    SQLiteDatabase db_records;</span><br><span class="line">    Cursor cursor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        initView();</span><br><span class="line">        initData();</span><br><span class="line">        initListener();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mEditSearch = (EditText) findViewById(R.id.edit_search);</span><br><span class="line">        mTvSearch = (TextView) findViewById(R.id.tv_search);</span><br><span class="line">        mTvTip = (TextView) findViewById(R.id.tv_tip);</span><br><span class="line">        mListView = (ListViewForScrollView) findViewById(R.id.listView);</span><br><span class="line">        mTvClear = (TextView) findViewById(R.id.tv_clear);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        searchSqliteHelper = <span class="keyword">new</span> SearchSqliteHelper(<span class="keyword">this</span>);</span><br><span class="line">        recordsSqliteHelper = <span class="keyword">new</span> RecordsSqliteHelper(<span class="keyword">this</span>);</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 2017/8/10 1、初始化本地数据库</span></span><br><span class="line">        initializeData();</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 2017/8/10 2、尝试从保存查询纪录的数据库中获取历史纪录并显示</span></span><br><span class="line">        cursor = recordsSqliteHelper.getReadableDatabase().rawQuery(<span class="string">"select * from table_records"</span>, <span class="keyword">null</span>);</span><br><span class="line">        adapter = <span class="keyword">new</span> SimpleCursorAdapter(<span class="keyword">this</span>, android.R.layout.simple_list_item_2, cursor</span><br><span class="line">                , <span class="keyword">new</span> String[]&#123;<span class="string">"username"</span>, <span class="string">"password"</span>&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;android.R.id.text1, android.R.id.text2&#125;</span><br><span class="line">                , CursorAdapter.FLAG_REGISTER_CONTENT_OBSERVER);</span><br><span class="line">        mListView.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 避免重复初始化数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">deleteData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        db_search = searchSqliteHelper.getWritableDatabase();</span><br><span class="line">        db_search.execSQL(<span class="string">"delete from table_search"</span>);</span><br><span class="line">        db_search.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initializeData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        deleteData();</span><br><span class="line">        db_search = searchSqliteHelper.getWritableDatabase();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            db_search.execSQL(<span class="string">"insert into table_search values(null,?,?)"</span>,</span><br><span class="line">                    <span class="keyword">new</span> String[]&#123;<span class="string">"name"</span> + i + <span class="number">10</span>, <span class="string">"pass"</span> + i + <span class="string">"word"</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        db_search.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化事件监听</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 清除历史纪录</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        mTvClear.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                deleteRecords();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 搜索按钮保存搜索纪录，隐藏软键盘</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        mTvSearch.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//隐藏键盘</span></span><br><span class="line">                ((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE))</span><br><span class="line">                        .hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);</span><br><span class="line">                <span class="comment">//保存搜索记录</span></span><br><span class="line">                insertRecords(mEditSearch.getText().toString().trim());</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * EditText对键盘搜索按钮的监听，保存搜索纪录，隐藏软件盘</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 2017/8/10 4、搜索及保存搜索纪录</span></span><br><span class="line">        mEditSearch.setOnKeyListener(<span class="keyword">new</span> View.OnKeyListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKey</span><span class="params">(View view, <span class="keyword">int</span> keyCode, KeyEvent keyEvent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_ENTER &amp;&amp; keyEvent.getAction() == KeyEvent.ACTION_DOWN) &#123;</span><br><span class="line">                    <span class="comment">//隐藏键盘</span></span><br><span class="line">                    ((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE))</span><br><span class="line">                            .hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);</span><br><span class="line">                    <span class="comment">//保存搜索记录</span></span><br><span class="line">                    insertRecords(mEditSearch.getText().toString().trim());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * EditText搜索框对输入值变化的监听，实时搜索</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 2017/8/10 3、使用TextWatcher实现对实时搜索</span></span><br><span class="line">        mEditSearch.addTextChangedListener(<span class="keyword">new</span> TextWatcher() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable editable)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (mEditSearch.getText().toString().equals(<span class="string">""</span>)) &#123;</span><br><span class="line">                    mTvTip.setText(<span class="string">"搜索历史"</span>);</span><br><span class="line">                    mTvClear.setVisibility(View.VISIBLE);</span><br><span class="line">                    cursor = recordsSqliteHelper.getReadableDatabase().rawQuery(<span class="string">"select * from table_records"</span>, <span class="keyword">null</span>);</span><br><span class="line">                    refreshListView();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mTvTip.setText(<span class="string">"搜索结果"</span>);</span><br><span class="line">                    mTvClear.setVisibility(View.GONE);</span><br><span class="line">                    String searchString = mEditSearch.getText().toString();</span><br><span class="line">                    queryData(searchString);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * ListView的item点击事件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 2017/8/10 5、listview的点击 做你自己的业务逻辑 保存搜索纪录</span></span><br><span class="line">        mListView.setOnItemClickListener(<span class="keyword">new</span> AdapterView.OnItemClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">                String username = ((TextView) view.findViewById(android.R.id.text1)).getText().toString();</span><br><span class="line">                String password = ((TextView) view.findViewById(android.R.id.text2)).getText().toString();</span><br><span class="line">                Log.e(<span class="string">"Skylark "</span>, username + <span class="string">"---"</span> + password);</span><br><span class="line">                <span class="comment">// <span class="doctag">TODO:</span> 2017/8/10 做自己的业务逻辑</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存搜索纪录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">insertRecords</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!hasDataRecords(username)) &#123;</span><br><span class="line">            db_records = recordsSqliteHelper.getWritableDatabase();</span><br><span class="line">            db_records.execSQL(<span class="string">"insert into table_records values(null,?,?)"</span>, <span class="keyword">new</span> String[]&#123;username, <span class="string">""</span>&#125;);</span><br><span class="line">            db_records.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查是否已经存在此搜索纪录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> records</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">hasDataRecords</span><span class="params">(String records)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        cursor = recordsSqliteHelper.getReadableDatabase()</span><br><span class="line">                .rawQuery(<span class="string">"select _id,username from table_records where username = ?"</span></span><br><span class="line">                        , <span class="keyword">new</span> String[]&#123;records&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cursor.moveToNext();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 搜索数据库中的数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> searchData</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">queryData</span><span class="params">(String searchData)</span> </span>&#123;</span><br><span class="line">        cursor = searchSqliteHelper.getReadableDatabase()</span><br><span class="line">                .rawQuery(<span class="string">"select * from table_search where username like '%"</span> + searchData + <span class="string">"%' or password like '%"</span> + searchData + <span class="string">"%'"</span>, <span class="keyword">null</span>);</span><br><span class="line">        refreshListView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除历史纪录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">deleteRecords</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        db_records = recordsSqliteHelper.getWritableDatabase();</span><br><span class="line">        db_records.execSQL(<span class="string">"delete from table_records"</span>);</span><br><span class="line"></span><br><span class="line">        cursor = recordsSqliteHelper.getReadableDatabase().rawQuery(<span class="string">"select * from table_records"</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (mEditSearch.getText().toString().equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            refreshListView();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 刷新listview</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshListView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">        adapter.swapCursor(cursor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        <span class="keyword">if</span> (db_records != <span class="keyword">null</span>) &#123;</span><br><span class="line">            db_records.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (db_search != <span class="keyword">null</span>) &#123;</span><br><span class="line">            db_search.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>第一篇技术类型博客，讲解可能不是很清楚，还存在着诸多漏洞，请多包涵。</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。</p><p><a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://blog.csdn.net/leoleohan/article/details/50688283/" target="_blank">Android搜索功能的案例，本地保存搜索历史记录</a>    </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/08/10/android-local-search-sql/" target="_blank" rel="noopener">Android搜索实时显示功能实现</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;作为一名Android开发小白，应该时刻督促自己不断的学习技术，最近遇到了一个和搜索有关的问题，就学习找时间学习了一下，&lt;strong&gt;如何实现简单Android的搜索功能并可以实时预览搜索结果&lt;/strong&gt;，整体思路应该和平常我们见到的搜索功能差不多，所以可以直接将我的这个嵌套到你的项目中使用。 &lt;a href=&quot;https://github.com/skylarklxlong/SkylarkDemo&quot; target=&quot;_blank&quot;&gt;项目源代码&lt;/a&gt;   &lt;/p&gt;
&lt;p&gt;先来看看效果图吧！&lt;br&gt;&lt;img src=&quot;/assets/images/posts/android/local_search.gif&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="SQL" scheme="http://yoursite.com/tags/SQL/"/>
    
      <category term="搜索" scheme="http://yoursite.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
      <category term="ListView" scheme="http://yoursite.com/tags/ListView/"/>
    
      <category term="ScrollView" scheme="http://yoursite.com/tags/ScrollView/"/>
    
  </entry>
  
  <entry>
    <title>Android自定义图形-Shape的使用</title>
    <link href="http://yoursite.com/2017/08/10/android-drawable-shape/"/>
    <id>http://yoursite.com/2017/08/10/android-drawable-shape/</id>
    <published>2017-08-10T00:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在Android开发中我们经常要改变控件（如<code>Button</code>）的背景、颜色、样式等，通常情况下我们可以直接使用不同的图片来改变控件的样式，但是，如果使用到的图片特别多、或者比较大，就会导致我们的APK体积增大，这是非常不友好的。还好Google为我们提供了一套自定义图形的方法，也就是我们今天的主角<code>Shape</code>  <a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>   </p><p>先来看看效果图吧！<br><img src="/assets/images/posts/android/drawable_shape.png" alt></p><a id="more"></a><h3 id="Shape的子属性"><a href="#Shape的子属性" class="headerlink" title="Shape的子属性"></a>Shape的子属性</h3><blockquote><p>shape一共有6个子属性：<code>solid</code>、<code>gradient</code>、<code>stroke</code>、<code>corners</code>、<code>padding</code>、<code>size</code></p></blockquote><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">solid</td><td style="text-align:left">给shape填充背景颜色</td></tr><tr><td style="text-align:left">gradient</td><td style="text-align:left">给shape添加背景渐变</td></tr><tr><td style="text-align:left">stroke</td><td style="text-align:left">给shape添加边框</td></tr><tr><td style="text-align:left">corners</td><td style="text-align:left">给shape添加圆角</td></tr><tr><td style="text-align:left">padding</td><td style="text-align:left">给shape设置上下左右四个方向的间隔</td></tr><tr><td style="text-align:left">size</td><td style="text-align:left">给shape设置大小</td></tr></tbody></table><p>下面通过代码来逐个讲解：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"oval"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- oval表示椭圆 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 填充 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#ffffff"</span> /&gt;</span> <span class="comment">&lt;!-- 定义填充的颜色值 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 渐变 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">gradient</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:angle</span>=<span class="string">"90"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:endColor</span>=<span class="string">"#00ff00"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:startColor</span>=<span class="string">"#ff0000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:type</span>=<span class="string">"sweep"</span> /&gt;</span> <span class="comment">&lt;!-- 渐变属性 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 描边 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"#0000ff"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dashGap</span>=<span class="string">"3dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dashWidth</span>=<span class="string">"5dp"</span> /&gt;</span> <span class="comment">&lt;!-- 定义描边的宽度和描边的颜色值 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 圆角 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottomLeftRadius</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottomRightRadius</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:topLeftRadius</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:topRightRadius</span>=<span class="string">"5dp"</span> /&gt;</span> <span class="comment">&lt;!-- 设置四个角的半径 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 间隔 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottom</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:top</span>=<span class="string">"10dp"</span> /&gt;</span> <span class="comment">&lt;!-- 设置各个方向的间隔 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 大小 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">size</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:height</span>=<span class="string">"200dp"</span> /&gt;</span> <span class="comment">&lt;!-- 定义宽高 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>看看效果   </p><p><img src="/assets/images/posts/android/drawable_shape.png" alt></p><h3 id="详细讲解"><a href="#详细讲解" class="headerlink" title="详细讲解"></a>详细讲解</h3><ul><li><p>1、shape自身属性</p><blockquote><p><code>android:shape=&quot;oval&quot;</code> 表示将此shape的形状设置为椭圆形<br>可以指定的形状有四种： line线形、oval椭圆形、ring环形、rectangle距形</p></blockquote></li><li><p>2、solid属性</p><blockquote><p><code>android:color=&quot;#ffffff&quot;</code> 填充的颜色，它也就只有这一个属性值</p></blockquote></li><li><p>3、gradient（注意如果将solid的颜色设置为透明，则gradient的设置将失效）   </p><blockquote><p><code>android:color=&quot;#ffffff&quot;</code> 渐变开始的颜色<br><code>android:endColor=&quot;#00ff00&quot;</code> 渐变结束的颜色<br><code>android:angle=&quot;90&quot;</code> 渐变角度，必须是45的整数倍<br><code>android:type=&quot;sweep&quot;</code> 以中心为原点360度扫描式渐变模式<br>默认的渐变模式为 <code>linear</code> 线性渐变 ,还有一种为径向渐变 <code>radial</code> ，在使用径向渐变时还需要额外设定半径 <code>android:gradientRadius</code>    </p></blockquote></li><li><p>4、stroke属性</p><blockquote><p><code>android:width=&quot;10dp&quot;</code> 描边线宽<br><code>android:color=&quot;#0000ff&quot;</code> 描边线的颜色<br><code>android:dashWidth=&quot;5dp&quot;</code> 表示’-‘这样一个横线的宽度<br><code>android:dashGap=&quot;3dp&quot;</code> 间隔的距离</p></blockquote></li><li><p>5、corners属性</p><blockquote><p><code>android:radius</code> 圆角的半径，值越大角越圆<br>还可以单独设置四个角的圆角半径 <code>android:topLeftRadius</code> ,<code>android:topRightRadius</code> ,<code>android:bottomLeftRadius</code> ,<code>android:bottomRightRadius</code></p></blockquote></li><li><p>6、padding属性   </p><blockquote><p>可以分别设置上下左右四个方向的间隔 <code>android:left</code>,<code>android:top</code>,<code>android:right</code>,<code>android:bottom</code></p></blockquote></li><li><p>7、size属性    </p><blockquote><p><code>android:width=&quot;300dp&quot;</code> 设置shape的宽<br><code>android:height=&quot;200dp&quot;</code> 设置shape的高</p></blockquote></li></ul><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>虽然，<code>shape</code> 的属性就只有这几个，但是，你却可以使用它们制作出很多你意向不到的效果。请开始你的表演吧！</p><p>如果你在参考过程中遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，Android的相关知识，欢迎继续关注我博客的更新。</p><p><a href="https://github.com/skylarklxlong/SkylarkDemo" target="_blank">项目源代码</a>   </p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://blog.csdn.net/feng88724/article/details/6398193" target="_blank">【Android UI】 Shape详解</a>    </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/08/10/android-drawable-shape/" target="_blank" rel="noopener">Android自定义图形-Shape的使用</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在Android开发中我们经常要改变控件（如&lt;code&gt;Button&lt;/code&gt;）的背景、颜色、样式等，通常情况下我们可以直接使用不同的图片来改变控件的样式，但是，如果使用到的图片特别多、或者比较大，就会导致我们的APK体积增大，这是非常不友好的。还好Google为我们提供了一套自定义图形的方法，也就是我们今天的主角&lt;code&gt;Shape&lt;/code&gt;  &lt;a href=&quot;https://github.com/skylarklxlong/SkylarkDemo&quot; target=&quot;_blank&quot;&gt;项目源代码&lt;/a&gt;   &lt;/p&gt;
&lt;p&gt;先来看看效果图吧！&lt;br&gt;&lt;img src=&quot;/assets/images/posts/android/drawable_shape.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="UI" scheme="http://yoursite.com/tags/UI/"/>
    
      <category term="Shape" scheme="http://yoursite.com/tags/Shape/"/>
    
      <category term="Drawable" scheme="http://yoursite.com/tags/Drawable/"/>
    
  </entry>
  
  <entry>
    <title>使用Jekyll + GitHub Pages搭建个人博客（绑定域名）</title>
    <link href="http://yoursite.com/2017/08/08/jekyll-blog-build-binding-domain/"/>
    <id>http://yoursite.com/2017/08/08/jekyll-blog-build-binding-domain/</id>
    <published>2017-08-08T00:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在上一篇<a href="/2017/08/01/jekyll-blog-build/" target="_blank"> 使用Jekyll + GitHub Pages搭建个人博客 </a>中已经向大家讲解了，如何通过GitHub Pages + Jekyll搭建一个属于自己的完全免费的个人博客，按照之前的教程现在你应该已经拥有一个自己独立的博客了，但是是不是觉得域名太长了？拼写太麻烦了？别担心，在本篇博客中我讲向你讲解如何给自己的博客绑定一个自己的域名。</p><a id="more"></a><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><blockquote><p>我的域名是在<a href="https://wanwang.aliyun.com/" target="_blank"> 万网 </a>上购买的，你可以购买一个自己喜欢的域名（PS：域名也可以在其它地方都买，不一定要在万网上购买，看个人喜好）。</p></blockquote><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><blockquote><p>在仓库根目录的<code>master</code>分支上创建文件<code>CNAME</code>，切记不能带后缀。并将不带协议名的裸域名写进去(<code>himakeit.online</code>或者<code>www.himakeit.online</code>，而不是<code>https://skylarklxlong.github.io/</code>)<br>在GitHub上，你的仓库下进入到Settings栏位，如果在GitHub Pages处看到绿色打钩，说明配置文件成功了。<br>这一步也可以参考<a href="https://help.github.com/articles/setting-up-your-pages-site-repository/" target="_blank">官方文档</a></p></blockquote><p><img src="/assets/images/posts/jekyll/github_newfile.png" alt></p><p><img src="/assets/images/posts/jekyll/github_cname.png" alt></p><p><img src="/assets/images/posts/jekyll/github_settings.png" alt></p><p><img src="/assets/images/posts/jekyll/github_domain.png" alt></p><h3 id="添加A记录"><a href="#添加A记录" class="headerlink" title="添加A记录"></a>添加A记录</h3><blockquote><p>购买完，进入<code>管理控制台</code> -&gt; <code>云解析</code> -&gt; <code>解析</code> -&gt; <code>添加解析</code> -&gt; 添加<code>A</code>记录和<code>CNAME</code>记录 :  </p></blockquote><p><code>skylarklxlong.github.io</code>  </p><blockquote></blockquote><p><code>192.30.252.153</code>  </p><blockquote></blockquote><p><code>192.30.252.154</code></p><p><img src="/assets/images/posts/jekyll/github_dns.png" alt></p><h4 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h4><blockquote><p>选中上一步中添加的三条记录点击启用即可可是DNS解析，大概10分钟左右就可以了。</p></blockquote><blockquote><p>现在你就可以使用新域名来开启你的博客了。</p></blockquote><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>以上便是如何给自己的博客绑定独立域名（此方法也适用在CSDN博客中）。</p><p>如果你在搭建博客遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，有关搭建个人博客的相关知识，欢迎继续关注我博客的更新。</p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://blog.csdn.net/garfielder007/article/details/50224761" target="_blank">利用github-pages建立个人博客</a>    </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/08/08/jekyll-blog-build-binding-domain/" target="_blank" rel="noopener">使用Jekyll + GitHub Pages搭建个人博客（绑定域名）</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在上一篇&lt;a href=&quot;/2017/08/01/jekyll-blog-build/&quot; target=&quot;_blank&quot;&gt; 使用Jekyll + GitHub Pages搭建个人博客 &lt;/a&gt;中已经向大家讲解了，如何通过GitHub Pages + Jekyll搭建一个属于自己的完全免费的个人博客，按照之前的教程现在你应该已经拥有一个自己独立的博客了，但是是不是觉得域名太长了？拼写太麻烦了？别担心，在本篇博客中我讲向你讲解如何给自己的博客绑定一个自己的域名。&lt;/p&gt;
    
    </summary>
    
    
      <category term="GitHub Pages" scheme="http://yoursite.com/tags/GitHub-Pages/"/>
    
      <category term="Jekyll" scheme="http://yoursite.com/tags/Jekyll/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>使用Jekyll + GitHub Pages搭建个人博客</title>
    <link href="http://yoursite.com/2017/08/01/jekyll-blog-build/"/>
    <id>http://yoursite.com/2017/08/01/jekyll-blog-build/</id>
    <published>2017-08-01T04:00:00.000Z</published>
    <updated>2020-05-19T11:23:34.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一直就想搭建一个属于自己的博客网站，但是一直拖着没有执行，在一次偶然的机会看到了鸿洋大神的 <a href="http://blog.csdn.net/lmj623565791/article/details/51319147" target="_blank">如何利用github打造博客专属域名</a>，就心血来潮，马上自己动手做了一个，耗时了近一个星期，终于差不多完成了，特意记录下来，供他人参考。</p><a id="more"></a><h3 id="关于Jekyll"><a href="#关于Jekyll" class="headerlink" title="关于Jekyll"></a>关于Jekyll</h3><p> 　Jekyll 是一个免费的生成静态网页的工具，不需要数据库支持。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown （或者 Textile） 以及 Liquid 转化成一个完整的可发布的静态网站，可以配合第三方服务例如： Disqus（评论）、多说(评论) 以及分享 等等扩展功能，Jekyll 可以直接部署在 Github（国外） 或 Coding（国内） 上，可以绑定自己的域名。<a href="http://jekyll.bootcss.com/" target="_blank">Jekyll中文文档</a>、<a href="https://jekyllrb.com/" target="_blank">Jekyll英文文档</a>、<a href="http://jekyllthemes.org/" target="_blank">Jekyll主题列表</a>。</p><h3 id="关于GitHub-Pages"><a href="#关于GitHub-Pages" class="headerlink" title="关于GitHub Pages"></a>关于GitHub Pages</h3><p> 　官方说法是Websites for you and your projects.<a href="https://pages.github.com/" target="_blank">GitHub Pages</a>是一个免费的静态网站托管平台，由github提供，它具有以下特点：</p><ol><li>GitHub Pages 有 300M 免费空间，资料自己管理，保存可靠；</li><li>学着用 GitHub，享受 GitHub 的便利，上面有很多大牛，眼界会开阔很多；</li><li>顺便看看 GitHub 工作原理，最好的团队协作流程；</li><li>GitHub 是趋势；</li><li>可以自定义域名</li></ol><h3 id="本地环境搭建"><a href="#本地环境搭建" class="headerlink" title="本地环境搭建"></a>本地环境搭建</h3><p>如果你只是想使用本主题，而不想搭建本地环境，那么可以直接跳过这部分，不搭建本地环境则不能实现本地预览，以下安装操作都是在Windows系统环境下进行。（安装有点烦，会出现你意想不到的错误，祝你好运！）</p><h5 id="安装Ruby"><a href="#安装Ruby" class="headerlink" title="安装Ruby"></a>安装Ruby</h5><p>jekyll本身基于Ruby开发，因此，想要在本地构建一个测试环境需要具有Ruby的开发和运行环境。在windows下，可以使用<a href="http://rubyinstaller.org/downloads/" target="_blank">Rubyinstaller</a>安装，<a href="http://www.ruby-lang.org/zh_cn/downloads/" target="_blank">ruby安装官方说明</a>，Windows下只需要保持默认状态一路下一步就可以了。</p><h5 id="安装RubyDevKit"><a href="#安装RubyDevKit" class="headerlink" title="安装RubyDevKit"></a>安装RubyDevKit</h5><p>从这里<a href="http://rubyinstaller.org/downloads/" target="_blank">下载DevKit</a>，注意版本要与Ruby版本一致。  </p><p>下载下来的是一个sfx格式的文件，如果你安装有7-zip，可以直接双击，它会自解压到你所选择的目录。  </p><p>解压完成之后，用cmd进入到刚才解压的目录下，运行下面命令，该命令会生成config.yml。  </p><p><code>$ ruby dk.rb init</code></p><p><code>config.yml</code>文件实际上是检测系统安装的ruby的位置并记录在这个文件中，以便稍后使用。但上面的命令只针对使用rubyinstall安装的ruby有效，如果是其他方式安装的话，需要手动修改<code>config.yml</code>。</p><p>最后，执行如下命令，执行安装：  </p><p><code>$ ruby setup.rb</code></p><p>如果没有setup.rb的话，执行：   </p><p><code>$ ruby dk.rb install</code></p><h5 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h5><p><a href="https://git-scm.com/downloads/" target="_blank">Git下载</a></p><p>创建本地仓库myblog</p><p><code>$ git init myblog</code></p><h5 id="安装Bundler"><a href="#安装Bundler" class="headerlink" title="安装Bundler"></a>安装Bundler</h5><p>建议使用<a href="http://bundler.io/" target="_blank">Bundler</a>来安装和运行Jekyll。</p><p>直接使用下面命令即可：   </p><p><code>$ gem install bundler</code></p><p>然后在上面的myblog目录创建一个叫Gemfile的文件，注意没有后缀，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">source &apos;https://ruby.taobao.org/&apos;</span><br><span class="line">gem &apos;github-pages&apos;, group: :jekyll_plugins</span><br></pre></td></tr></table></figure><p>保存后，在命令行中执行</p><p><code>$ bundle install</code></p><p>命令会根据当前目录下的Gemfile，安装所需要的所有软件。这一步所安装的东西，可以说跟github本身的环境是完全一致的，所以可以确保本地如果没有错误，上传后也不会有错误。而且可以在将来使用下面命令，随时更新环境，十分方便</p><p><code>$ bundle update</code></p><p>使用下面命令，启动转化和本地服务：</p><p><code>$ bundle exec jekyll serve</code></p><p>在浏览器里输入： <a href="http://localhost:4000" target="_blank">http://localhost:4000</a>，就可以看到你的博客效果了。</p><p><img src="/assets/images/posts/jekyll/mybloghome.png" alt></p><p>so easy !(PS:说起来都是泪啊，国内的网络你懂得，下载安装有点慢请耐心等待，或者使用<a href="https://npm.taobao.org/" target="_blank">淘宝源</a>)</p><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><p>　<br>　Jekyll 的核心其实是一个文本转换引擎。它的概念其实就是： 你用你最喜欢的标记语言来写文章，可以是 Markdown，也可以是 Textile,或者就是简单的 HTML, 然后 Jekyll 就会帮你套入一个或一系列的布局中。在整个过程中你可以设置URL路径, 你的文本在布局中的显示样式等等。这些都可以通过纯文本编辑来实现，最终生成的静态页面就是你的成品了。</p><p> 一个基本的 Jekyll 网站的目录结构一般是像这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── _includes</span><br><span class="line">|   ├── footer.html</span><br><span class="line">|   └── header.html</span><br><span class="line">├── _layouts</span><br><span class="line">|   ├── default.html</span><br><span class="line">|   ├── post.html</span><br><span class="line">|   └── page.html</span><br><span class="line">├── _posts</span><br><span class="line">|   └── 2017-08-01-welcome-to-jekyll.markdown</span><br><span class="line">├── _sass</span><br><span class="line">|   ├── _base.scss</span><br><span class="line">|   ├── _layout.scss</span><br><span class="line">|   └── _syntax-highlighting.scss</span><br><span class="line">├── about.md</span><br><span class="line">├── css</span><br><span class="line">|   └── main.scss</span><br><span class="line">├── feed.xml</span><br><span class="line">└── index.html</span><br></pre></td></tr></table></figure><p>这些目录结构以及具体的作用可以参考 <a href="http://jekyll.com.cn/docs/structure/" target="_blank">官网文档</a></p><p>进入 _config.yml 里面，修改成你想看到的信息，重新 jekyll server ，刷新浏览器就可以看到你刚刚修改的信息了。</p><p>到此，博客初步搭建算是完成了，</p><h3 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h3><p>我这里讲的是部署到 Github Page 创建一个 github 账号，然后创建一个跟你账户名一样的仓库，如我的 github 账户名叫 <a href="https://github.com/skylarklxlong" target="_blank">skylarklxlong</a>，我的 github 仓库名就叫 <a href="https://github.com/skylarklxlong/skylarklxlong.github.io" target="_blank">skylarklxlong.github.io</a>，创建好了之后，把刚才建立的 myblog 项目 push 到 username.github.io仓库里去（username指的是你的github用户名），检查你远端仓库已经跟你本地 myBlog 同步了，然后你在浏览器里输入 username.github.io ，就可以访问你的博客了。</p><h3 id="编写文章"><a href="#编写文章" class="headerlink" title="编写文章"></a>编写文章</h3><p>　　所有的文章都是 _posts 目录下面，文章格式为 mardown 格式，文章文件名可以是 .mardown 或者 .md。</p><p>　　编写一篇新文章很简单，你可以直接从 _posts/ 目录下复制一份出来 <code>2017-08-01-welcome-to-myblog.md</code> ，修改名字为 2017-08-01-article1.markdown ，注意：文章名的格式前面必须为 2017-08-01- ，日期可以修改，但必须为 年-月-日- 格式，后面的 article1 是整个文章的连接 URL，如果文章名为中文，那么文章的连接URL就会变成这样的：%E6%90%AD%E5， 所以建议文章名最好是英文的或者阿拉伯数字。 双击 2017-08-01-article1.markdown 打开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">layout: post</span><br><span class="line">title: 欢迎来到我的博客</span><br><span class="line">date: 2017-08-01</span><br><span class="line">tags: Jekyll</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">正文...</span><br></pre></td></tr></table></figure><p>title: 显示的文章名， 如：title: 我的第一篇文章<br>date:  显示的文章发布日期，如：date: 2016-10-16<br>tags: tag标签的分类，如：tags: 随笔            </p><p>注意：文章头部格式必须为上面的，…. 就是文章的正文内容。</p><p>我写文章使用的是 MarkdownPad2 编辑器，如果你对 markdown 语法不熟悉的话，可以在网上查找写资料，后续我也会写关于如何使用markdown的相关文章。</p><h3 id="使用我的模版"><a href="#使用我的模版" class="headerlink" title="使用我的模版"></a>使用我的模版</h3><p>虽然博客部署完成了，你会发现博客太简单不是你想要的，如果你喜欢我的模板的话，可以使用我的模板。</p><p>首先你要获取的我博客，<a href="https://github.com/skylarklxlong/skylarklxlong.github.io.git" target="_blank">Github项目地址</a>，你可以直接<a href="https://github.com/skylarklxlong/skylarklxlong.github.io/archive/master.zip" target="_blank">点击下载博客</a>，进去skylarklxlong.github.io/ 目录下， 使用命令部署本地服务 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jekyll server</span><br></pre></td></tr></table></figure><p>就可以看到的博客样式了。</p><h3 id="修改成你自己的博客"><a href="#修改成你自己的博客" class="headerlink" title="修改成你自己的博客"></a>修改成你自己的博客</h3><blockquote><ul><li>如果你想使用我的模板请把 _posts/ 目录下的文章都去掉。</li><li>修改 _config.yml 文件里面的内容为你自己的。</li></ul></blockquote><p>然后使用 git push 到你自己的仓库里面去，检查你远端仓库，在浏览器输入 username.github.io 就会发现，你有一个漂亮的主题模板了。      </p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>刚开始写博客不久（是真的刚开始），难免会出现一些语法及其他错误，还请各位多多包含。</p><p>如果你在搭建博客遇到问题，可以在我的联系方式中给我提问。</p><p>后面会继续介绍，如何绑定你自己的固定域名，欢迎继续关注我博客的更新。</p><h3 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h3><ul><li><a href="http://baixin.io/2016/10/jekyll_tutorials1/" target="_blank">潘柏信-Jekyll搭建个人博客</a> </li><li><a href="https://help.github.com/articles/setting-up-your-github-pages-site-locally-with-jekyll/" target="_blank">GitHub Pages官方文档</a></li><li><a href="http://www.pchou.info/ssgithubPage/2014-07-04-build-github-blog-page-08.html" target="_blank">一步步在GitHub上创建博客主页</a>    </li></ul><p>转载请注明：<a href="https://skylarklxlong.github.io" target="_blank" rel="noopener">XueLong的博客</a> » <a href="https://skylarklxlong.github.io/2017/08/01/jekyll-blog-build/" target="_blank" rel="noopener">使用Jekyll + GitHub Pages搭建个人博客</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;一直就想搭建一个属于自己的博客网站，但是一直拖着没有执行，在一次偶然的机会看到了鸿洋大神的 &lt;a href=&quot;http://blog.csdn.net/lmj623565791/article/details/51319147&quot; target=&quot;_blank&quot;&gt;如何利用github打造博客专属域名&lt;/a&gt;，就心血来潮，马上自己动手做了一个，耗时了近一个星期，终于差不多完成了，特意记录下来，供他人参考。&lt;/p&gt;
    
    </summary>
    
    
      <category term="GitHub Pages" scheme="http://yoursite.com/tags/GitHub-Pages/"/>
    
      <category term="Jekyll" scheme="http://yoursite.com/tags/Jekyll/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到我的博客</title>
    <link href="http://yoursite.com/2017/08/01/welcome-to-myblog/"/>
    <id>http://yoursite.com/2017/08/01/welcome-to-myblog/</id>
    <published>2017-08-01T00:00:00.000Z</published>
    <updated>2020-01-31T07:26:54.744Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自留地"><a href="#自留地" class="headerlink" title="自留地^_^"></a>自留地^_^</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;自留地&quot;&gt;&lt;a href=&quot;#自留地&quot; class=&quot;headerlink&quot; title=&quot;自留地^_^&quot;&gt;&lt;/a&gt;自留地^_^&lt;/h3&gt;
      
    
    </summary>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
